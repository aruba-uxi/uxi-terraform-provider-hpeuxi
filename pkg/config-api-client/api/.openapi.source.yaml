openapi: 3.1.0
info:
  title: HPE Aruba Networking UXI Configuration
  description: This document outlines the API contracts for HPE Aruba Networking UXI.
  contact:
    name: HPE Aruba Networking UXI Support
    url: 'https://help.capenetworks.com/en/'
    email: support@capenetworks.com
  version: 6.7.0
servers:
  - url: 'https://api.capenetworks.com'
paths:
  '/networking-uxi/v1alpha1/agents/{id}':
    delete:
      operationId: agent_delete
      summary: Agent Delete
      description: Delete the specified agent
      parameters:
        - name: id
          in: path
          description: The unique identifier of the agent
          required: true
          schema:
            description: The unique identifier of the agent
            type: string
            title: Agent ID
      responses:
        '204':
          description: Successful Response
        '400':
          description: Bad Request
          content:
            application/json:
              examples:
                Bad Request:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_BAD_REQUEST
                    httpStatusCode: 400
                    message: The request could not be processed due to a validation error.
                    errorDetails:
                      - issues:
                          - description: The request could not be processed due to a validation error.
                            subject: header
                            source: x-generic-header
                        type: hpe.greenlake.bad_request
                  summary: Bad Request
                  description: The request could not be processed due to a validation error.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_UNAUTHORIZED
                    message: >-
                      You are not authorized to perform this action - the token is missing, expired,
                      revoked, malformed, or invalid for other reasons
                    httpStatusCode: 401
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              examples:
                Forbidden:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_FORBIDDEN
                    httpStatusCode: 403
                    message: The user has insufficient permissions to complete the request.
                  summary: Forbidden
                  description: The user has insufficient permissions to complete the request.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              examples:
                Not Found:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_NOT_FOUND
                    httpStatusCode: 404
                    message: Resource not found.
                  summary: Not Found
                  description: Resource not found.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              examples:
                Method Not Allowed:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_METHOD_NOT_ALLOWED
                    httpStatusCode: 405
                    message: Method is not allowed.
                  summary: Method Not Allowed
                  description: Method is not allowed.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              examples:
                Unsupported Media Type:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_UNSUPPORTED_MEDIA_TYPE
                    httpStatusCode: 415
                    message: Media type is unsupported.
                  summary: Unsupported Media Type
                  description: Media type is unsupported.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '429':
          description: Too Many Requests
          content:
            application/json:
              examples:
                Too Many Requests:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_TOO_MANY_REQUESTS
                    message: Too many requests.
                    httpStatusCode: 429
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              examples:
                Internal Server Error:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_INTERNAL_SERVER_ERROR
                    httpStatusCode: 500
                    message: The request cannot be processed due to an unknown issue.
                  summary: Internal Server Error
                  description: The request cannot be processed due to an unknown issue.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        5XX:
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - HTTPBearer: []
      tags:
        - api
        - configuration
        - v1alpha1
        - agents
    patch:
      operationId: agent_patch
      summary: Agent Patch
      description: Patch the specified agent
      parameters:
        - name: id
          in: path
          description: The unique identifier of the agent
          required: true
          schema:
            description: The unique identifier of the agent
            type: string
            title: Agent ID
      requestBody:
        required: true
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/AgentPatchRequest'
            examples:
              Update agent details:
                summary: Update agent details
                description: Update the details of the specified agent
                value:
                  name: Updated Agent Name
                  notes: Updated notes
                  pcapMode: 'off'
              Update agent name:
                summary: Update agent name
                description: Update the name of the specified agent
                value:
                  name: Updated Agent Name
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentPatchResponse'
              examples:
                Updated agent:
                  value:
                    id: b1b8bd47-951a-42e3-bbec-f68ee5cc94be
                    serial: '1234567890'
                    name: Agent Name
                    groupName: Group Name
                    groupPath: 4cca81b7c5d0.2a1cacab1e7c
                    modelNumber: UX-F5C
                    wifiMacAddress: '00:11:22:33:44:55'
                    ethernetMacAddress: '00:11:22:33:44:56'
                    notes: Notes
                    pcapMode: 'off'
                    type: networking-uxi/agent
                  summary: Updated agent
                  description: Agent successfully updated.
        '400':
          description: Bad Request
          content:
            application/json:
              examples:
                Bad Request:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_BAD_REQUEST
                    httpStatusCode: 400
                    message: The request could not be processed due to a validation error.
                    errorDetails:
                      - issues:
                          - description: The request could not be processed due to a validation error.
                            subject: header
                            source: x-generic-header
                        type: hpe.greenlake.bad_request
                  summary: Bad Request
                  description: The request could not be processed due to a validation error.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_UNAUTHORIZED
                    message: >-
                      You are not authorized to perform this action - the token is missing, expired,
                      revoked, malformed, or invalid for other reasons
                    httpStatusCode: 401
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              examples:
                Forbidden:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_FORBIDDEN
                    httpStatusCode: 403
                    message: The user has insufficient permissions to complete the request.
                  summary: Forbidden
                  description: The user has insufficient permissions to complete the request.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              examples:
                Not Found:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_NOT_FOUND
                    httpStatusCode: 404
                    message: Resource not found.
                  summary: Not Found
                  description: Resource not found.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              examples:
                Method Not Allowed:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_METHOD_NOT_ALLOWED
                    httpStatusCode: 405
                    message: Method is not allowed.
                  summary: Method Not Allowed
                  description: Method is not allowed.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              examples:
                Unsupported Media Type:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_UNSUPPORTED_MEDIA_TYPE
                    httpStatusCode: 415
                    message: Media type is unsupported.
                  summary: Unsupported Media Type
                  description: Media type is unsupported.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '429':
          description: Too Many Requests
          content:
            application/json:
              examples:
                Too Many Requests:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_TOO_MANY_REQUESTS
                    message: Too many requests.
                    httpStatusCode: 429
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              examples:
                Internal Server Error:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_INTERNAL_SERVER_ERROR
                    httpStatusCode: 500
                    message: The request cannot be processed due to an unknown issue.
                  summary: Internal Server Error
                  description: The request cannot be processed due to an unknown issue.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        5XX:
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - HTTPBearer: []
      tags:
        - api
        - configuration
        - v1alpha1
        - agents
      x-stability-level: alpha
  '/networking-uxi/v1alpha1/agent-group-assignments/{id}':
    delete:
      operationId: agent_group_assignment_delete
      summary: Agent Group Assignment Delete
      description: Delete the specified agent group assignment
      parameters:
        - name: id
          in: path
          description: The unique identifier of the assignment
          required: true
          schema:
            description: The unique identifier of the assignment
            type: string
            title: Assignment ID
      responses:
        '204':
          description: Successful Response
        '400':
          description: Bad Request
          content:
            application/json:
              examples:
                Bad Request:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_BAD_REQUEST
                    httpStatusCode: 400
                    message: The request could not be processed due to a validation error.
                    errorDetails:
                      - issues:
                          - description: The request could not be processed due to a validation error.
                            subject: header
                            source: x-generic-header
                        type: hpe.greenlake.bad_request
                  summary: Bad Request
                  description: The request could not be processed due to a validation error.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_UNAUTHORIZED
                    message: >-
                      You are not authorized to perform this action - the token is missing, expired,
                      revoked, malformed, or invalid for other reasons
                    httpStatusCode: 401
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              examples:
                Forbidden:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_FORBIDDEN
                    httpStatusCode: 403
                    message: The user has insufficient permissions to complete the request.
                  summary: Forbidden
                  description: The user has insufficient permissions to complete the request.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              examples:
                Not Found:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_NOT_FOUND
                    httpStatusCode: 404
                    message: Resource not found.
                  summary: Not Found
                  description: Resource not found.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              examples:
                Method Not Allowed:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_METHOD_NOT_ALLOWED
                    httpStatusCode: 405
                    message: Method is not allowed.
                  summary: Method Not Allowed
                  description: Method is not allowed.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              examples:
                Unsupported Media Type:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_UNSUPPORTED_MEDIA_TYPE
                    httpStatusCode: 415
                    message: Media type is unsupported.
                  summary: Unsupported Media Type
                  description: Media type is unsupported.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '429':
          description: Too Many Requests
          content:
            application/json:
              examples:
                Too Many Requests:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_TOO_MANY_REQUESTS
                    message: Too many requests.
                    httpStatusCode: 429
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              examples:
                Internal Server Error:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_INTERNAL_SERVER_ERROR
                    httpStatusCode: 500
                    message: The request cannot be processed due to an unknown issue.
                  summary: Internal Server Error
                  description: The request cannot be processed due to an unknown issue.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        5XX:
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - HTTPBearer: []
      tags:
        - api
        - configuration
        - v1alpha1
        - agent-group-assignments
      x-stability-level: alpha
  /networking-uxi/v1alpha1/agent-group-assignments:
    post:
      operationId: agent_group_assignment_post
      summary: Agent Group Assignment Post
      description: Create an agent group assignment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgentGroupAssignmentPostRequest'
            examples:
              Create an agent group assignment:
                summary: Create an agent group assignment
                description: Create an agent group assignment
                value:
                  groupId: e0f97a387c31
                  agentId: 0f4c2917-9886-41bf-8ea6-faaea9fddbf0
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentGroupAssignmentPostResponse'
              examples:
                Agent group assignment created:
                  value:
                    id: 8419059c-1f4d-4cea-adf1-bd09654edba1
                    group:
                      id: 4gergsdgdf4tr
                    agent:
                      id: bff985d7-ef1d-4d49-84d6-5e3ed345dda1
                    type: networking-uxi/agent-group-assignment
                  summary: Agent group assignment created
                  description: Agent group assignment successfully created.
        '400':
          description: Bad Request
          content:
            application/json:
              examples:
                Bad Request:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_BAD_REQUEST
                    httpStatusCode: 400
                    message: The request could not be processed due to a validation error.
                    errorDetails:
                      - issues:
                          - description: The request could not be processed due to a validation error.
                            subject: header
                            source: x-generic-header
                        type: hpe.greenlake.bad_request
                  summary: Bad Request
                  description: The request could not be processed due to a validation error.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_UNAUTHORIZED
                    message: >-
                      You are not authorized to perform this action - the token is missing, expired,
                      revoked, malformed, or invalid for other reasons
                    httpStatusCode: 401
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              examples:
                Forbidden:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_FORBIDDEN
                    httpStatusCode: 403
                    message: The user has insufficient permissions to complete the request.
                  summary: Forbidden
                  description: The user has insufficient permissions to complete the request.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              examples:
                Method Not Allowed:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_METHOD_NOT_ALLOWED
                    httpStatusCode: 405
                    message: Method is not allowed.
                  summary: Method Not Allowed
                  description: Method is not allowed.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Conflict
          content:
            application/json:
              examples:
                Assignment already exists:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_CONFLICT
                    httpStatusCode: 409
                    message: Resource already exists.
                  summary: Assignment already exists
                  description: Resource already exists.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              examples:
                Unsupported Media Type:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_UNSUPPORTED_MEDIA_TYPE
                    httpStatusCode: 415
                    message: Media type is unsupported.
                  summary: Unsupported Media Type
                  description: Media type is unsupported.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              examples:
                Agent does not exist:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_NETWORKING_UXI_AGENT_DOES_NOT_EXIST
                    httpStatusCode: 422
                    message: Unable to assign agent to group - the specified agent does not exist.
                  summary: Agent does not exist
                  description: Unable to assign agent to group - the specified agent does not exist.
                Assignment to root group error:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_NETWORKING_UXI_CANNOT_ASSIGN_AGENT_TO_ROOT_GROUP
                    httpStatusCode: 422
                    message: Unable to assign agent to group - the specified group is a root group.
                  summary: Assignment to root group error
                  description: Unable to assign agent to group - the specified group is a root group.
                Group does not exist:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_NETWORKING_UXI_GROUP_DOES_NOT_EXIST
                    httpStatusCode: 422
                    message: Unable to assign agent to group - the specified group does not exist.
                  summary: Group does not exist
                  description: Unable to assign agent to group - the specified group does not exist.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              examples:
                Too Many Requests:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_TOO_MANY_REQUESTS
                    message: Too many requests.
                    httpStatusCode: 429
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              examples:
                Internal Server Error:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_INTERNAL_SERVER_ERROR
                    httpStatusCode: 500
                    message: The request cannot be processed due to an unknown issue.
                  summary: Internal Server Error
                  description: The request cannot be processed due to an unknown issue.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        5XX:
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - HTTPBearer: []
      tags:
        - api
        - configuration
        - v1alpha1
        - agent-group-assignments
      x-stability-level: alpha
    get:
      operationId: agent_group_assignments_get
      summary: Agent Group Assignments Get
      description: Get a list of agent group assignments
      parameters:
        - name: id
          in: query
          description: The ID of the resource.
          required: false
          schema:
            description: The ID of the resource.
            anyOf:
              - type: string
              - type: 'null'
            title: ID
        - name: next
          in: query
          description: The next cursor for pagination.
          required: false
          schema:
            description: The next cursor for pagination.
            anyOf:
              - type: string
              - type: 'null'
            title: Next
        - name: limit
          in: query
          description: The maximum number of items returned in the response.
          required: false
          schema:
            description: The maximum number of items returned in the response.
            type: integer
            default: 50
            maximum: 100
            minimum: 0
            title: Limit
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentGroupAssignmentsGetResponse'
              examples:
                List of agent group assignments:
                  value:
                    items:
                      - id: 8419059c-1f4d-4cea-adf1-bd09654edba1
                        group:
                          id: 4gergsdgdf4tr
                        agent:
                          id: bff985d7-ef1d-4d49-84d6-5e3ed345dda1
                        type: networking-uxi/agent-group-assignment
                    count: 1
                    next: aGVsbG8gZnJvbSBhbGlzdGFpcg==
                  summary: List of agent group assignments
                  description: List of agent group assignment retrieval.
        '400':
          description: Bad Request
          content:
            application/json:
              examples:
                Malformed cursor:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_NETWORKING_UXI_MALFORMED_CURSOR
                    httpStatusCode: 400
                    message: The provided cursor could not be decoded.
                  summary: Malformed cursor
                  description: The provided cursor could not be decoded.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_UNAUTHORIZED
                    message: >-
                      You are not authorized to perform this action - the token is missing, expired,
                      revoked, malformed, or invalid for other reasons
                    httpStatusCode: 401
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              examples:
                Forbidden:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_FORBIDDEN
                    httpStatusCode: 403
                    message: The user has insufficient permissions to complete the request.
                  summary: Forbidden
                  description: The user has insufficient permissions to complete the request.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              examples:
                Method Not Allowed:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_METHOD_NOT_ALLOWED
                    httpStatusCode: 405
                    message: Method is not allowed.
                  summary: Method Not Allowed
                  description: Method is not allowed.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              examples:
                Unsupported Media Type:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_UNSUPPORTED_MEDIA_TYPE
                    httpStatusCode: 415
                    message: Media type is unsupported.
                  summary: Unsupported Media Type
                  description: Media type is unsupported.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '429':
          description: Too Many Requests
          content:
            application/json:
              examples:
                Too Many Requests:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_TOO_MANY_REQUESTS
                    message: Too many requests.
                    httpStatusCode: 429
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              examples:
                Internal Server Error:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_INTERNAL_SERVER_ERROR
                    httpStatusCode: 500
                    message: The request cannot be processed due to an unknown issue.
                  summary: Internal Server Error
                  description: The request cannot be processed due to an unknown issue.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        5XX:
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - HTTPBearer: []
      tags:
        - api
        - configuration
        - v1alpha1
        - agent-group-assignments
      x-stability-level: alpha
  /networking-uxi/v1alpha1/agents:
    get:
      operationId: agents_get
      summary: Agents Get
      description: Get a list of agents
      parameters:
        - name: id
          in: query
          description: The ID of the resource.
          required: false
          schema:
            description: The ID of the resource.
            anyOf:
              - type: string
              - type: 'null'
            title: ID
        - name: next
          in: query
          description: The next cursor for pagination.
          required: false
          schema:
            description: The next cursor for pagination.
            anyOf:
              - type: string
              - type: 'null'
            title: Next
        - name: limit
          in: query
          description: The maximum number of items returned in the response.
          required: false
          schema:
            description: The maximum number of items returned in the response.
            type: integer
            default: 50
            maximum: 100
            minimum: 0
            title: Limit
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentsGetResponse'
              examples:
                List of agents:
                  value:
                    items:
                      - id: b1b8bd47-951a-42e3-bbec-f68ee5cc94be
                        serial: '1234567890'
                        name: Agent Name
                        groupName: Group Name
                        groupPath: 4cca81b7c5d0.2a1cacab1e7c
                        modelNumber: UX-F5C
                        wifiMacAddress: '00:11:22:33:44:55'
                        ethernetMacAddress: '00:11:22:33:44:56'
                        notes: Notes
                        pcapMode: 'off'
                        type: networking-uxi/agent
                    count: 1
                    next: aGVsbG8gZnJvbSBhbGlzdGFpcg==
                  summary: List of agents
                  description: List of agents retrieval.
        '400':
          description: Bad Request
          content:
            application/json:
              examples:
                Malformed cursor:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_NETWORKING_UXI_MALFORMED_CURSOR
                    httpStatusCode: 400
                    message: The provided cursor could not be decoded.
                  summary: Malformed cursor
                  description: The provided cursor could not be decoded.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_UNAUTHORIZED
                    message: >-
                      You are not authorized to perform this action - the token is missing, expired,
                      revoked, malformed, or invalid for other reasons
                    httpStatusCode: 401
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              examples:
                Forbidden:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_FORBIDDEN
                    httpStatusCode: 403
                    message: The user has insufficient permissions to complete the request.
                  summary: Forbidden
                  description: The user has insufficient permissions to complete the request.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              examples:
                Method Not Allowed:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_METHOD_NOT_ALLOWED
                    httpStatusCode: 405
                    message: Method is not allowed.
                  summary: Method Not Allowed
                  description: Method is not allowed.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              examples:
                Unsupported Media Type:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_UNSUPPORTED_MEDIA_TYPE
                    httpStatusCode: 415
                    message: Media type is unsupported.
                  summary: Unsupported Media Type
                  description: Media type is unsupported.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '429':
          description: Too Many Requests
          content:
            application/json:
              examples:
                Too Many Requests:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_TOO_MANY_REQUESTS
                    message: Too many requests.
                    httpStatusCode: 429
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              examples:
                Internal Server Error:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_INTERNAL_SERVER_ERROR
                    httpStatusCode: 500
                    message: The request cannot be processed due to an unknown issue.
                  summary: Internal Server Error
                  description: The request cannot be processed due to an unknown issue.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        5XX:
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - HTTPBearer: []
      tags:
        - api
        - configuration
        - v1alpha1
        - agents
      x-stability-level: alpha
  '/networking-uxi/v1alpha1/groups/{id}':
    delete:
      operationId: group_delete
      summary: Group Delete
      description: >-
        Delete an existing group. Deleting a group will also delete all child groups and resource
        assignments to any deleted group.
      parameters:
        - name: id
          in: path
          description: The unique identifier of the group.
          required: true
          schema:
            description: The unique identifier of the group.
            type: string
            title: Group ID
      responses:
        '204':
          description: Successful Response
        '400':
          description: Bad Request
          content:
            application/json:
              examples:
                Bad Request:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_BAD_REQUEST
                    httpStatusCode: 400
                    message: The request could not be processed due to a validation error.
                    errorDetails:
                      - issues:
                          - description: The request could not be processed due to a validation error.
                            subject: header
                            source: x-generic-header
                        type: hpe.greenlake.bad_request
                  summary: Bad Request
                  description: The request could not be processed due to a validation error.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_UNAUTHORIZED
                    message: >-
                      You are not authorized to perform this action - the token is missing, expired,
                      revoked, malformed, or invalid for other reasons
                    httpStatusCode: 401
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              examples:
                Forbidden:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_FORBIDDEN
                    httpStatusCode: 403
                    message: The user has insufficient permissions to complete the request.
                  summary: Forbidden
                  description: The user has insufficient permissions to complete the request.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              examples:
                Not Found:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_NOT_FOUND
                    httpStatusCode: 404
                    message: Resource not found.
                  summary: Not Found
                  description: Resource not found.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              examples:
                Method Not Allowed:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_METHOD_NOT_ALLOWED
                    httpStatusCode: 405
                    message: Method is not allowed.
                  summary: Method Not Allowed
                  description: Method is not allowed.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              examples:
                Unsupported Media Type:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_UNSUPPORTED_MEDIA_TYPE
                    httpStatusCode: 415
                    message: Media type is unsupported.
                  summary: Unsupported Media Type
                  description: Media type is unsupported.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              examples:
                Cannot delete root group:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_NETWORKING_UXI_CANNOT_DELETE_ROOT_GROUP
                    httpStatusCode: 422
                    message: Cannot delete group - the root group cannot be deleted.
                  summary: Cannot delete root group
                  description: Cannot delete group - the root group cannot be deleted.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              examples:
                Too Many Requests:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_TOO_MANY_REQUESTS
                    message: Too many requests.
                    httpStatusCode: 429
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              examples:
                Internal Server Error:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_INTERNAL_SERVER_ERROR
                    httpStatusCode: 500
                    message: The request cannot be processed due to an unknown issue.
                  summary: Internal Server Error
                  description: The request cannot be processed due to an unknown issue.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        5XX:
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - HTTPBearer: []
      tags:
        - api
        - configuration
        - v1alpha1
        - groups
      x-stability-level: alpha
    patch:
      operationId: group_patch
      summary: Group Patch
      description: Update the properties of a group.
      parameters:
        - name: id
          in: path
          description: The unique identifier of the group
          required: true
          schema:
            description: The unique identifier of the group
            type: string
            title: Group ID
      requestBody:
        required: true
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/GroupPatchRequest'
            examples:
              Update group name:
                summary: Update group name
                description: Update the name of the specified group
                value:
                  name: Updated Group Name
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupPatchResponse'
              examples:
                Updated group:
                  value:
                    id: dsfldjsah389
                    name: Group Name
                    path: 4gergsdgdf4tr.dsfldjsah389
                    parent:
                      id: 4gergsdgdf4tr
                    type: networking-uxi/group
                  summary: Updated group
                  description: Group successfully updated.
        '400':
          description: Bad Request
          content:
            application/json:
              examples:
                Bad Request:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_BAD_REQUEST
                    httpStatusCode: 400
                    message: The request could not be processed due to a validation error.
                    errorDetails:
                      - issues:
                          - description: The request could not be processed due to a validation error.
                            subject: header
                            source: x-generic-header
                        type: hpe.greenlake.bad_request
                  summary: Bad Request
                  description: The request could not be processed due to a validation error.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_UNAUTHORIZED
                    message: >-
                      You are not authorized to perform this action - the token is missing, expired,
                      revoked, malformed, or invalid for other reasons
                    httpStatusCode: 401
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              examples:
                Forbidden:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_FORBIDDEN
                    httpStatusCode: 403
                    message: The user has insufficient permissions to complete the request.
                  summary: Forbidden
                  description: The user has insufficient permissions to complete the request.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              examples:
                Not Found:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_NOT_FOUND
                    httpStatusCode: 404
                    message: Resource not found.
                  summary: Not Found
                  description: Resource not found.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              examples:
                Method Not Allowed:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_METHOD_NOT_ALLOWED
                    httpStatusCode: 405
                    message: Method is not allowed.
                  summary: Method Not Allowed
                  description: Method is not allowed.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              examples:
                Unsupported Media Type:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_UNSUPPORTED_MEDIA_TYPE
                    httpStatusCode: 415
                    message: Media type is unsupported.
                  summary: Unsupported Media Type
                  description: Media type is unsupported.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              examples:
                Duplicate sibling group name:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_NETWORKING_UXI_DUPLICATE_SIBLING_GROUP_NAME
                    httpStatusCode: 422
                    message: Unable to update group - a sibling group already has the specified name.
                  summary: Duplicate sibling group name
                  description: Unable to update group - a sibling group already has the specified name.
                Cannot update the root group:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_NETWORKING_UXI_CANNOT_UPDATE_ROOT_GROUP
                    httpStatusCode: 422
                    message: Unable to update group - the root group cannot be updated.
                  summary: Cannot update the root group
                  description: Unable to update group - the root group cannot be updated.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              examples:
                Too Many Requests:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_TOO_MANY_REQUESTS
                    message: Too many requests.
                    httpStatusCode: 429
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              examples:
                Internal Server Error:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_INTERNAL_SERVER_ERROR
                    httpStatusCode: 500
                    message: The request cannot be processed due to an unknown issue.
                  summary: Internal Server Error
                  description: The request cannot be processed due to an unknown issue.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        5XX:
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - HTTPBearer: []
      tags:
        - api
        - configuration
        - v1alpha1
        - groups
      x-stability-level: alpha
  /networking-uxi/v1alpha1/groups:
    post:
      operationId: group_post
      summary: Group Post
      description: >-
        Create a new group with the specified name as a child group of the specified parent group.
        When `parentId` is omitted, the new group is created as a child of the root group.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupPostRequest'
            examples:
              Create a new group (specify parent ID):
                summary: Create a new group (specify parent ID)
                description: Create a new group as a child of the specified parent group
                value:
                  parentId: e0f97a387c31
                  name: Example Group
              Create a new group (parent ID not specified):
                summary: Create a new group (parent ID not specified)
                description: Create a new group as a top level configurable group
                value:
                  name: Example Group
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupPostResponse'
              examples:
                Group created:
                  value:
                    id: dsfldjsah389
                    name: Group Name
                    path: 4gergsdgdf4tr.dsfldjsah389
                    parent:
                      id: 4gergsdgdf4tr
                    type: networking-uxi/group
                  summary: Group created
                  description: Group successfully created.
        '400':
          description: Bad Request
          content:
            application/json:
              examples:
                Bad Request:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_BAD_REQUEST
                    httpStatusCode: 400
                    message: The request could not be processed due to a validation error.
                    errorDetails:
                      - issues:
                          - description: The request could not be processed due to a validation error.
                            subject: header
                            source: x-generic-header
                        type: hpe.greenlake.bad_request
                  summary: Bad Request
                  description: The request could not be processed due to a validation error.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_UNAUTHORIZED
                    message: >-
                      You are not authorized to perform this action - the token is missing, expired,
                      revoked, malformed, or invalid for other reasons
                    httpStatusCode: 401
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              examples:
                Forbidden:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_FORBIDDEN
                    httpStatusCode: 403
                    message: The user has insufficient permissions to complete the request.
                  summary: Forbidden
                  description: The user has insufficient permissions to complete the request.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              examples:
                Method Not Allowed:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_METHOD_NOT_ALLOWED
                    httpStatusCode: 405
                    message: Method is not allowed.
                  summary: Method Not Allowed
                  description: Method is not allowed.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Conflict
          content:
            application/json:
              examples:
                A group with the same name and parent already exists:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_CONFLICT
                    httpStatusCode: 409
                    message: Resource already exists.
                  summary: A group with the same name and parent already exists
                  description: Resource already exists.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              examples:
                Unsupported Media Type:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_UNSUPPORTED_MEDIA_TYPE
                    httpStatusCode: 415
                    message: Media type is unsupported.
                  summary: Unsupported Media Type
                  description: Media type is unsupported.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              examples:
                Parent group does not exist:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_NETWORKING_UXI_PARENT_GROUP_DOES_NOT_EXIST
                    httpStatusCode: 422
                    message: Unable to create group - the specified parent group does not exist.
                  summary: Parent group does not exist
                  description: Unable to create group - the specified parent group does not exist.
                Maximum group depth exceeded:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_NETWORKING_UXI_MAXIMUM_GROUP_DEPTH_EXCEEDED
                    httpStatusCode: 422
                    message: Unable to create group - the maximum group depth has been exceeded.
                  summary: Maximum group depth exceeded
                  description: Unable to create group - the maximum group depth has been exceeded.
                Maximum group count exceeded:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_NETWORKING_UXI_MAXIMUM_GROUP_COUNT_EXCEEDED
                    httpStatusCode: 422
                    message: Unable to create group - the maximum group count has been exceeded.
                  summary: Maximum group count exceeded
                  description: Unable to create group - the maximum group count has been exceeded.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              examples:
                Too Many Requests:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_TOO_MANY_REQUESTS
                    message: Too many requests.
                    httpStatusCode: 429
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              examples:
                Internal Server Error:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_INTERNAL_SERVER_ERROR
                    httpStatusCode: 500
                    message: The request cannot be processed due to an unknown issue.
                  summary: Internal Server Error
                  description: The request cannot be processed due to an unknown issue.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        5XX:
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - HTTPBearer: []
      tags:
        - api
        - configuration
        - v1alpha1
        - groups
      x-stability-level: alpha
    get:
      operationId: groups_get
      summary: Groups Get
      description: Get a list of groups
      parameters:
        - name: id
          in: query
          description: The ID of the resource.
          required: false
          schema:
            description: The ID of the resource.
            anyOf:
              - type: string
              - type: 'null'
            title: ID
        - name: next
          in: query
          description: The next cursor for pagination.
          required: false
          schema:
            description: The next cursor for pagination.
            anyOf:
              - type: string
              - type: 'null'
            title: Next
        - name: limit
          in: query
          description: The maximum number of items returned in the response.
          required: false
          schema:
            description: The maximum number of items returned in the response.
            type: integer
            default: 50
            maximum: 100
            minimum: 0
            title: Limit
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupsGetResponse'
              examples:
                List of groups:
                  value:
                    items:
                      - id: dsfldjsah389
                        name: Group Name
                        parent:
                          id: 4gergsdgdf4tr
                        path: 4gergsdgdf4tr.dsfldjsah389
                        type: networking-uxi/group
                    count: 1
                    next: aGVsbG8gZnJvbSBhbGlzdGFpcg==
                  summary: List of groups
                  description: List of groups successfully retrieval.
        '400':
          description: Bad Request
          content:
            application/json:
              examples:
                Malformed cursor:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_NETWORKING_UXI_MALFORMED_CURSOR
                    httpStatusCode: 400
                    message: The provided cursor could not be decoded.
                  summary: Malformed cursor
                  description: The provided cursor could not be decoded.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_UNAUTHORIZED
                    message: >-
                      You are not authorized to perform this action - the token is missing, expired,
                      revoked, malformed, or invalid for other reasons
                    httpStatusCode: 401
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              examples:
                Forbidden:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_FORBIDDEN
                    httpStatusCode: 403
                    message: The user has insufficient permissions to complete the request.
                  summary: Forbidden
                  description: The user has insufficient permissions to complete the request.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              examples:
                Method Not Allowed:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_METHOD_NOT_ALLOWED
                    httpStatusCode: 405
                    message: Method is not allowed.
                  summary: Method Not Allowed
                  description: Method is not allowed.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              examples:
                Unsupported Media Type:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_UNSUPPORTED_MEDIA_TYPE
                    httpStatusCode: 415
                    message: Media type is unsupported.
                  summary: Unsupported Media Type
                  description: Media type is unsupported.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '429':
          description: Too Many Requests
          content:
            application/json:
              examples:
                Too Many Requests:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_TOO_MANY_REQUESTS
                    message: Too many requests.
                    httpStatusCode: 429
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              examples:
                Internal Server Error:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_INTERNAL_SERVER_ERROR
                    httpStatusCode: 500
                    message: The request cannot be processed due to an unknown issue.
                  summary: Internal Server Error
                  description: The request cannot be processed due to an unknown issue.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        5XX:
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - HTTPBearer: []
      tags:
        - api
        - configuration
        - v1alpha1
        - groups
      x-stability-level: alpha
  '/networking-uxi/v1alpha1/network-group-assignments/{id}':
    delete:
      operationId: network_group_assignment_delete
      summary: Network Group Assignment Delete
      description: Delete the specified network group assignment
      parameters:
        - name: id
          in: path
          description: The unique identifier of the network group assignment
          required: true
          schema:
            description: The unique identifier of the network group assignment
            type: string
            title: Assignment ID
      responses:
        '204':
          description: Successful Response
        '400':
          description: Bad Request
          content:
            application/json:
              examples:
                Bad Request:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_BAD_REQUEST
                    httpStatusCode: 400
                    message: The request could not be processed due to a validation error.
                    errorDetails:
                      - issues:
                          - description: The request could not be processed due to a validation error.
                            subject: header
                            source: x-generic-header
                        type: hpe.greenlake.bad_request
                  summary: Bad Request
                  description: The request could not be processed due to a validation error.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_UNAUTHORIZED
                    message: >-
                      You are not authorized to perform this action - the token is missing, expired,
                      revoked, malformed, or invalid for other reasons
                    httpStatusCode: 401
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              examples:
                Forbidden:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_FORBIDDEN
                    httpStatusCode: 403
                    message: The user has insufficient permissions to complete the request.
                  summary: Forbidden
                  description: The user has insufficient permissions to complete the request.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              examples:
                Not Found:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_NOT_FOUND
                    httpStatusCode: 404
                    message: Resource not found.
                  summary: Not Found
                  description: Resource not found.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              examples:
                Method Not Allowed:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_METHOD_NOT_ALLOWED
                    httpStatusCode: 405
                    message: Method is not allowed.
                  summary: Method Not Allowed
                  description: Method is not allowed.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              examples:
                Unsupported Media Type:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_UNSUPPORTED_MEDIA_TYPE
                    httpStatusCode: 415
                    message: Media type is unsupported.
                  summary: Unsupported Media Type
                  description: Media type is unsupported.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              examples:
                Unassign orphans sensor error:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_NETWORKING_UXI_DELETE_ORPHANS_SENSOR
                    httpStatusCode: 422
                    message: Unable to delete assignment - the assignment will leave a sensor unconfigured.
                  summary: Unassign orphans sensor error
                  description: Unable to delete assignment - the assignment will leave a sensor unconfigured.
                Inherited assignment deletion error:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_NETWORKING_UXI_CANNOT_DELETE_INHERITED_ASSIGNMENT
                    httpStatusCode: 422
                    message: Unable to delete assignment - an inherited assignment cannot be deleted.
                  summary: Inherited assignment deletion error
                  description: Unable to delete assignment - an inherited assignment cannot be deleted.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              examples:
                Too Many Requests:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_TOO_MANY_REQUESTS
                    message: Too many requests.
                    httpStatusCode: 429
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              examples:
                Internal Server Error:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_INTERNAL_SERVER_ERROR
                    httpStatusCode: 500
                    message: The request cannot be processed due to an unknown issue.
                  summary: Internal Server Error
                  description: The request cannot be processed due to an unknown issue.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        5XX:
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - HTTPBearer: []
      tags:
        - api
        - configuration
        - v1alpha1
        - network-group-assignments
      x-stability-level: alpha
  /networking-uxi/v1alpha1/network-group-assignments:
    post:
      operationId: network_group_assignment_post
      summary: Network Group Assignment Post
      description: Create a network group assignment.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkGroupAssignmentPostRequest'
            examples:
              Create a network group assignment:
                summary: Create a network group assignment
                description: Create a network group assignment.
                value:
                  groupId: dsfldjsah389
                  networkId: ssid-4gergsdgdf4tr
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkGroupAssignmentPostResponse'
              examples:
                Create a network group assignment:
                  value:
                    id: 90e79136-8c10-4732-9e2a-c928f39c03b8
                    group:
                      id: dsfldjsah389
                    network:
                      id: ssid-4gergsdgdf4tr
                    type: networking-uxi/network-group-assignment
                  summary: Create a network group assignment
                  description: Network group assignment successfully created.
        '400':
          description: Bad Request
          content:
            application/json:
              examples:
                Bad Request:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_BAD_REQUEST
                    httpStatusCode: 400
                    message: The request could not be processed due to a validation error.
                    errorDetails:
                      - issues:
                          - description: The request could not be processed due to a validation error.
                            subject: header
                            source: x-generic-header
                        type: hpe.greenlake.bad_request
                  summary: Bad Request
                  description: The request could not be processed due to a validation error.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_UNAUTHORIZED
                    message: >-
                      You are not authorized to perform this action - the token is missing, expired,
                      revoked, malformed, or invalid for other reasons
                    httpStatusCode: 401
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              examples:
                Forbidden:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_FORBIDDEN
                    httpStatusCode: 403
                    message: The user has insufficient permissions to complete the request.
                  summary: Forbidden
                  description: The user has insufficient permissions to complete the request.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              examples:
                Method Not Allowed:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_METHOD_NOT_ALLOWED
                    httpStatusCode: 405
                    message: Method is not allowed.
                  summary: Method Not Allowed
                  description: Method is not allowed.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Conflict
          content:
            application/json:
              examples:
                Assignment already exists:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_CONFLICT
                    httpStatusCode: 409
                    message: Resource already exists.
                  summary: Assignment already exists
                  description: Resource already exists.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              examples:
                Unsupported Media Type:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_UNSUPPORTED_MEDIA_TYPE
                    httpStatusCode: 415
                    message: Media type is unsupported.
                  summary: Unsupported Media Type
                  description: Media type is unsupported.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              examples:
                Network does not exist:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_NETWORKING_UXI_NETWORK_DOES_NOT_EXIST
                    httpStatusCode: 422
                    message: Unable to assign network to group - the specified network does not exist.
                  summary: Network does not exist
                  description: Unable to assign network to group - the specified network does not exist.
                Group does not exist:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_NETWORKING_UXI_GROUP_DOES_NOT_EXIST
                    httpStatusCode: 422
                    message: Unable to assign network to group - the specified group does not exist.
                  summary: Group does not exist
                  description: Unable to assign network to group - the specified group does not exist.
                Assignment to root group error:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_NETWORKING_UXI_CANNOT_ASSIGN_NETWORK_TO_ROOT_GROUP
                    httpStatusCode: 422
                    message: Unable to assign network to group - the specified group is a root group.
                  summary: Assignment to root group error
                  description: Unable to assign network to group - the specified group is a root group.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              examples:
                Too Many Requests:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_TOO_MANY_REQUESTS
                    message: Too many requests.
                    httpStatusCode: 429
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              examples:
                Internal Server Error:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_INTERNAL_SERVER_ERROR
                    httpStatusCode: 500
                    message: The request cannot be processed due to an unknown issue.
                  summary: Internal Server Error
                  description: The request cannot be processed due to an unknown issue.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        5XX:
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - HTTPBearer: []
      tags:
        - api
        - configuration
        - v1alpha1
        - network-group-assignments
      x-stability-level: alpha
    get:
      operationId: network_group_assignments_get
      summary: Network Group Assignments Get
      description: Get a list of network group assignments.
      parameters:
        - name: id
          in: query
          description: The ID of the resource.
          required: false
          schema:
            description: The ID of the resource.
            anyOf:
              - type: string
              - type: 'null'
            title: ID
        - name: next
          in: query
          description: The next cursor for pagination.
          required: false
          schema:
            description: The next cursor for pagination.
            anyOf:
              - type: string
              - type: 'null'
            title: Next
        - name: limit
          in: query
          description: The maximum number of items returned in the response.
          required: false
          schema:
            description: The maximum number of items returned in the response.
            type: integer
            default: 50
            maximum: 100
            minimum: 0
            title: Limit
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkGroupAssignmentsGetResponse'
              examples:
                List of network group assignments:
                  value:
                    items:
                      - id: 8419059c-1f4d-4cea-adf1-bd09654edba1
                        group:
                          id: 4gergsdgdf4tr
                        network:
                          id: bff985d7-ef1d-4d49-84d6-5e3ed345dda1
                        type: networking-uxi/network-group-assignment
                    count: 1
                    next: aGVsbG8gZnJvbSBhbGlzdGFpcg==
                  summary: List of network group assignments
                  description: Network group assignment list retrieval.
        '400':
          description: Bad Request
          content:
            application/json:
              examples:
                Malformed cursor:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_NETWORKING_UXI_MALFORMED_CURSOR
                    httpStatusCode: 400
                    message: The provided cursor could not be decoded.
                  summary: Malformed cursor
                  description: The provided cursor could not be decoded.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_UNAUTHORIZED
                    message: >-
                      You are not authorized to perform this action - the token is missing, expired,
                      revoked, malformed, or invalid for other reasons
                    httpStatusCode: 401
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              examples:
                Forbidden:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_FORBIDDEN
                    httpStatusCode: 403
                    message: The user has insufficient permissions to complete the request.
                  summary: Forbidden
                  description: The user has insufficient permissions to complete the request.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              examples:
                Method Not Allowed:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_METHOD_NOT_ALLOWED
                    httpStatusCode: 405
                    message: Method is not allowed.
                  summary: Method Not Allowed
                  description: Method is not allowed.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              examples:
                Unsupported Media Type:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_UNSUPPORTED_MEDIA_TYPE
                    httpStatusCode: 415
                    message: Media type is unsupported.
                  summary: Unsupported Media Type
                  description: Media type is unsupported.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '429':
          description: Too Many Requests
          content:
            application/json:
              examples:
                Too Many Requests:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_TOO_MANY_REQUESTS
                    message: Too many requests.
                    httpStatusCode: 429
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              examples:
                Internal Server Error:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_INTERNAL_SERVER_ERROR
                    httpStatusCode: 500
                    message: The request cannot be processed due to an unknown issue.
                  summary: Internal Server Error
                  description: The request cannot be processed due to an unknown issue.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        5XX:
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - HTTPBearer: []
      tags:
        - api
        - configuration
        - v1alpha1
        - network-group-assignments
      x-stability-level: alpha
  '/networking-uxi/v1alpha1/sensor-group-assignments/{id}':
    delete:
      operationId: sensor_group_assignment_delete
      summary: Sensor Group Assignment Delete
      description: Delete the specified sensor group assignment
      parameters:
        - name: id
          in: path
          description: The unique identifier of the sensor group assignment
          required: true
          schema:
            description: The unique identifier of the sensor group assignment
            type: string
            title: Assignment ID
      responses:
        '204':
          description: Successful Response
        '400':
          description: Bad Request
          content:
            application/json:
              examples:
                Bad Request:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_BAD_REQUEST
                    httpStatusCode: 400
                    message: The request could not be processed due to a validation error.
                    errorDetails:
                      - issues:
                          - description: The request could not be processed due to a validation error.
                            subject: header
                            source: x-generic-header
                        type: hpe.greenlake.bad_request
                  summary: Bad Request
                  description: The request could not be processed due to a validation error.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_UNAUTHORIZED
                    message: >-
                      You are not authorized to perform this action - the token is missing, expired,
                      revoked, malformed, or invalid for other reasons
                    httpStatusCode: 401
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              examples:
                Forbidden:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_FORBIDDEN
                    httpStatusCode: 403
                    message: The user has insufficient permissions to complete the request.
                  summary: Forbidden
                  description: The user has insufficient permissions to complete the request.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              examples:
                Not Found:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_NOT_FOUND
                    httpStatusCode: 404
                    message: Resource not found.
                  summary: Not Found
                  description: Resource not found.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              examples:
                Method Not Allowed:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_METHOD_NOT_ALLOWED
                    httpStatusCode: 405
                    message: Method is not allowed.
                  summary: Method Not Allowed
                  description: Method is not allowed.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              examples:
                Unsupported Media Type:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_UNSUPPORTED_MEDIA_TYPE
                    httpStatusCode: 415
                    message: Media type is unsupported.
                  summary: Unsupported Media Type
                  description: Media type is unsupported.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '429':
          description: Too Many Requests
          content:
            application/json:
              examples:
                Too Many Requests:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_TOO_MANY_REQUESTS
                    message: Too many requests.
                    httpStatusCode: 429
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              examples:
                Internal Server Error:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_INTERNAL_SERVER_ERROR
                    httpStatusCode: 500
                    message: The request cannot be processed due to an unknown issue.
                  summary: Internal Server Error
                  description: The request cannot be processed due to an unknown issue.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        5XX:
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - HTTPBearer: []
      tags:
        - api
        - configuration
        - v1alpha1
        - sensor-group-assignments
      x-stability-level: alpha
  /networking-uxi/v1alpha1/sensor-group-assignments:
    post:
      operationId: sensor_group_assignment_post
      summary: Sensor Group Assignment Post
      description: Create a sensor group assignment.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SensorGroupAssignmentPostRequest'
            examples:
              Create a sensor group assignment:
                summary: Create a sensor group assignment
                description: Create a sensor group assignment.
                value:
                  groupId: dsfldjsah389
                  sensorId: sensor-4gergsdgdf4tr
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SensorGroupAssignmentPostResponse'
              examples:
                Sensor group assignment created:
                  value:
                    id: 90e79136-8c10-4732-9e2a-c928f39c03b8
                    group:
                      id: dsfldjsah389
                    sensor:
                      id: sensor-4gergsdgdf4tr
                    type: networking-uxi/sensor-group-assignment
                  summary: Sensor group assignment created
                  description: Sensor group assignment successfully created.
        '400':
          description: Bad Request
          content:
            application/json:
              examples:
                Bad Request:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_BAD_REQUEST
                    httpStatusCode: 400
                    message: The request could not be processed due to a validation error.
                    errorDetails:
                      - issues:
                          - description: The request could not be processed due to a validation error.
                            subject: header
                            source: x-generic-header
                        type: hpe.greenlake.bad_request
                  summary: Bad Request
                  description: The request could not be processed due to a validation error.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_UNAUTHORIZED
                    message: >-
                      You are not authorized to perform this action - the token is missing, expired,
                      revoked, malformed, or invalid for other reasons
                    httpStatusCode: 401
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              examples:
                Forbidden:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_FORBIDDEN
                    httpStatusCode: 403
                    message: The user has insufficient permissions to complete the request.
                  summary: Forbidden
                  description: The user has insufficient permissions to complete the request.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              examples:
                Method Not Allowed:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_METHOD_NOT_ALLOWED
                    httpStatusCode: 405
                    message: Method is not allowed.
                  summary: Method Not Allowed
                  description: Method is not allowed.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Conflict
          content:
            application/json:
              examples:
                Assignment already exists:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_CONFLICT
                    httpStatusCode: 409
                    message: Resource already exists.
                  summary: Assignment already exists
                  description: Resource already exists.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              examples:
                Unsupported Media Type:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_UNSUPPORTED_MEDIA_TYPE
                    httpStatusCode: 415
                    message: Media type is unsupported.
                  summary: Unsupported Media Type
                  description: Media type is unsupported.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              examples:
                Sensor does not exist:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_NETWORKING_UXI_SENSOR_DOES_NOT_EXIST
                    httpStatusCode: 422
                    message: Unable to assign sensor to group - the specified sensor does not exist.
                  summary: Sensor does not exist
                  description: Unable to assign sensor to group - the specified sensor does not exist.
                Group does not exist:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_NETWORKING_UXI_GROUP_DOES_NOT_EXIST
                    httpStatusCode: 422
                    message: Unable to assign sensor to group - the specified group does not exist.
                  summary: Group does not exist
                  description: Unable to assign sensor to group - the specified group does not exist.
                Assignment to root group error:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_NETWORKING_UXI_CANNOT_ASSIGN_SENSOR_TO_ROOT_GROUP
                    httpStatusCode: 422
                    message: Unable to assign sensor to group - the specified group is a root group.
                  summary: Assignment to root group error
                  description: Unable to assign sensor to group - the specified group is a root group.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              examples:
                Too Many Requests:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_TOO_MANY_REQUESTS
                    message: Too many requests.
                    httpStatusCode: 429
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              examples:
                Internal Server Error:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_INTERNAL_SERVER_ERROR
                    httpStatusCode: 500
                    message: The request cannot be processed due to an unknown issue.
                  summary: Internal Server Error
                  description: The request cannot be processed due to an unknown issue.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        5XX:
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - HTTPBearer: []
      tags:
        - api
        - configuration
        - v1alpha1
        - sensor-group-assignments
      x-stability-level: alpha
    get:
      operationId: sensor_group_assignments_get
      summary: Sensor Group Assignments Get
      description: Get a list of sensor group assignments.
      parameters:
        - name: id
          in: query
          description: The ID of the resource.
          required: false
          schema:
            description: The ID of the resource.
            anyOf:
              - type: string
              - type: 'null'
            title: ID
        - name: next
          in: query
          description: The next cursor for pagination.
          required: false
          schema:
            description: The next cursor for pagination.
            anyOf:
              - type: string
              - type: 'null'
            title: Next
        - name: limit
          in: query
          description: The maximum number of items returned in the response.
          required: false
          schema:
            description: The maximum number of items returned in the response.
            type: integer
            default: 50
            maximum: 100
            minimum: 0
            title: Limit
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SensorGroupAssignmentsGetResponse'
              examples:
                List of sensor group assignments:
                  value:
                    items:
                      - id: 8419059c-1f4d-4cea-adf1-bd09654edba1
                        group:
                          id: 4gergsdgdf4tr
                        sensor:
                          id: bff985d7-ef1d-4d49-84d6-5e3ed345dda1
                        type: networking-uxi/sensor-group-assignment
                    count: 1
                    next: aGVsbG8gZnJvbSBhbGlzdGFpcg==
                  summary: List of sensor group assignments
                  description: Sensor group assignment list retrieval.
        '400':
          description: Bad Request
          content:
            application/json:
              examples:
                Malformed cursor:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_NETWORKING_UXI_MALFORMED_CURSOR
                    httpStatusCode: 400
                    message: The provided cursor could not be decoded.
                  summary: Malformed cursor
                  description: The provided cursor could not be decoded.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_UNAUTHORIZED
                    message: >-
                      You are not authorized to perform this action - the token is missing, expired,
                      revoked, malformed, or invalid for other reasons
                    httpStatusCode: 401
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              examples:
                Forbidden:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_FORBIDDEN
                    httpStatusCode: 403
                    message: The user has insufficient permissions to complete the request.
                  summary: Forbidden
                  description: The user has insufficient permissions to complete the request.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              examples:
                Method Not Allowed:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_METHOD_NOT_ALLOWED
                    httpStatusCode: 405
                    message: Method is not allowed.
                  summary: Method Not Allowed
                  description: Method is not allowed.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              examples:
                Unsupported Media Type:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_UNSUPPORTED_MEDIA_TYPE
                    httpStatusCode: 415
                    message: Media type is unsupported.
                  summary: Unsupported Media Type
                  description: Media type is unsupported.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '429':
          description: Too Many Requests
          content:
            application/json:
              examples:
                Too Many Requests:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_TOO_MANY_REQUESTS
                    message: Too many requests.
                    httpStatusCode: 429
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              examples:
                Internal Server Error:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_INTERNAL_SERVER_ERROR
                    httpStatusCode: 500
                    message: The request cannot be processed due to an unknown issue.
                  summary: Internal Server Error
                  description: The request cannot be processed due to an unknown issue.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        5XX:
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - HTTPBearer: []
      tags:
        - api
        - configuration
        - v1alpha1
        - sensor-group-assignments
      x-stability-level: alpha
  '/networking-uxi/v1alpha1/sensors/{id}':
    patch:
      operationId: sensor_patch
      summary: Sensor Patch
      description: Update the properties of a sensor.
      parameters:
        - name: id
          in: path
          description: The unique identifier of the sensor
          required: true
          schema:
            description: The unique identifier of the sensor
            type: string
            title: Sensor ID
      requestBody:
        required: true
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/SensorPatchRequest'
            examples:
              Update sensor details:
                summary: Update sensor details
                description: Update the details of the specified sensor
                value:
                  name: Updated Agent Name
                  pcapMode: 'off'
                  notes: Updated notes
                  addressNote: Updated address note
              Update sensor name:
                summary: Update sensor name
                description: Update the name of the specified sensor
                value:
                  name: Updated Sensor Name
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SensorPatchResponse'
              examples:
                Updated sensor:
                  value:
                    id: dsfldjsah389
                    serial: '123456789'
                    name: Sensor Name
                    groupName: Group Name
                    groupPath: 4cca81b7c5d0.2a1cacab1e7c
                    modelNumber: UX-F5C
                    wifiMacAddress: '00:11:22:33:44:55'
                    ethernetMacAddress: '66:77:88:99:AA:BB'
                    addressNote: Office
                    longitude: 12.345678
                    latitude: 98.765432
                    notes: Some notes
                    pcapMode: 'off'
                    type: networking-uxi/sensor
                  summary: Updated sensor
                  description: Sensor successfully updated.
        '400':
          description: Bad Request
          content:
            application/json:
              examples:
                Bad Request:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_BAD_REQUEST
                    httpStatusCode: 400
                    message: The request could not be processed due to a validation error.
                    errorDetails:
                      - issues:
                          - description: The request could not be processed due to a validation error.
                            subject: header
                            source: x-generic-header
                        type: hpe.greenlake.bad_request
                  summary: Bad Request
                  description: The request could not be processed due to a validation error.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_UNAUTHORIZED
                    message: >-
                      You are not authorized to perform this action - the token is missing, expired,
                      revoked, malformed, or invalid for other reasons
                    httpStatusCode: 401
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              examples:
                Forbidden:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_FORBIDDEN
                    httpStatusCode: 403
                    message: The user has insufficient permissions to complete the request.
                  summary: Forbidden
                  description: The user has insufficient permissions to complete the request.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              examples:
                Not Found:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_NOT_FOUND
                    httpStatusCode: 404
                    message: Resource not found.
                  summary: Not Found
                  description: Resource not found.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              examples:
                Method Not Allowed:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_METHOD_NOT_ALLOWED
                    httpStatusCode: 405
                    message: Method is not allowed.
                  summary: Method Not Allowed
                  description: Method is not allowed.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              examples:
                Unsupported Media Type:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_UNSUPPORTED_MEDIA_TYPE
                    httpStatusCode: 415
                    message: Media type is unsupported.
                  summary: Unsupported Media Type
                  description: Media type is unsupported.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '429':
          description: Too Many Requests
          content:
            application/json:
              examples:
                Too Many Requests:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_TOO_MANY_REQUESTS
                    message: Too many requests.
                    httpStatusCode: 429
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              examples:
                Internal Server Error:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_INTERNAL_SERVER_ERROR
                    httpStatusCode: 500
                    message: The request cannot be processed due to an unknown issue.
                  summary: Internal Server Error
                  description: The request cannot be processed due to an unknown issue.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        5XX:
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - HTTPBearer: []
      tags:
        - api
        - configuration
        - v1
        - sensors
      x-stability-level: alpha
  /networking-uxi/v1alpha1/sensors:
    get:
      operationId: sensors_get
      summary: Sensors Get
      description: List of sensors
      parameters:
        - name: id
          in: query
          description: The ID of the resource.
          required: false
          schema:
            description: The ID of the resource.
            anyOf:
              - type: string
              - type: 'null'
            title: ID
        - name: next
          in: query
          description: The next cursor for pagination.
          required: false
          schema:
            description: The next cursor for pagination.
            anyOf:
              - type: string
              - type: 'null'
            title: Next
        - name: limit
          in: query
          description: The maximum number of items returned in the response.
          required: false
          schema:
            description: The maximum number of items returned in the response.
            type: integer
            default: 50
            maximum: 100
            minimum: 0
            title: Limit
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SensorsGetResponse'
              examples:
                List of sensors:
                  value:
                    items:
                      - id: b1b8bd47-951a-42e3-bbec-f68ee5cc94be
                        serial: '1234567890'
                        name: Sensor Name
                        groupName: Group Name
                        groupPath: 4cca81b7c5d0.2a1cacab1e7c
                        modelNumber: UX-F5C
                        wifiMacAddress: '00:11:22:33:44:55'
                        ethernetMacAddress: '00:11:22:33:44:56'
                        addressNote: Address Note
                        longitude: 12.345678
                        latitude: 98.765432
                        notes: Notes
                        pcapMode: 'off'
                        type: networking-uxi/sensor
                    count: 1
                    next: aGVsbG8gZnJvbSBhbGlzdGFpcg==
                  summary: List of sensors
                  description: List of sensors retrieval.
        '400':
          description: Bad Request
          content:
            application/json:
              examples:
                Malformed cursor:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_NETWORKING_UXI_MALFORMED_CURSOR
                    httpStatusCode: 400
                    message: The provided cursor could not be decoded.
                  summary: Malformed cursor
                  description: The provided cursor could not be decoded.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_UNAUTHORIZED
                    message: >-
                      You are not authorized to perform this action - the token is missing, expired,
                      revoked, malformed, or invalid for other reasons
                    httpStatusCode: 401
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              examples:
                Forbidden:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_FORBIDDEN
                    httpStatusCode: 403
                    message: The user has insufficient permissions to complete the request.
                  summary: Forbidden
                  description: The user has insufficient permissions to complete the request.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              examples:
                Method Not Allowed:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_METHOD_NOT_ALLOWED
                    httpStatusCode: 405
                    message: Method is not allowed.
                  summary: Method Not Allowed
                  description: Method is not allowed.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              examples:
                Unsupported Media Type:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_UNSUPPORTED_MEDIA_TYPE
                    httpStatusCode: 415
                    message: Media type is unsupported.
                  summary: Unsupported Media Type
                  description: Media type is unsupported.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '429':
          description: Too Many Requests
          content:
            application/json:
              examples:
                Too Many Requests:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_TOO_MANY_REQUESTS
                    message: Too many requests.
                    httpStatusCode: 429
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              examples:
                Internal Server Error:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_INTERNAL_SERVER_ERROR
                    httpStatusCode: 500
                    message: The request cannot be processed due to an unknown issue.
                  summary: Internal Server Error
                  description: The request cannot be processed due to an unknown issue.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        5XX:
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - HTTPBearer: []
      tags:
        - api
        - configuration
        - v1alpha1
        - sensors
      x-stability-level: alpha
  '/networking-uxi/v1alpha1/service-test-group-assignments/{id}':
    delete:
      operationId: service_test_group_assignment_delete
      summary: Service Test Group Assignment Delete
      description: Delete the specified service test group assignment
      parameters:
        - name: id
          in: path
          description: The unique identifier of the service test group assignment
          required: true
          schema:
            description: The unique identifier of the service test group assignment
            type: string
            title: Assignment ID
      responses:
        '204':
          description: Successful Response
        '400':
          description: Bad Request
          content:
            application/json:
              examples:
                Bad Request:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_BAD_REQUEST
                    httpStatusCode: 400
                    message: The request could not be processed due to a validation error.
                    errorDetails:
                      - issues:
                          - description: The request could not be processed due to a validation error.
                            subject: header
                            source: x-generic-header
                        type: hpe.greenlake.bad_request
                  summary: Bad Request
                  description: The request could not be processed due to a validation error.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_UNAUTHORIZED
                    message: >-
                      You are not authorized to perform this action - the token is missing, expired,
                      revoked, malformed, or invalid for other reasons
                    httpStatusCode: 401
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              examples:
                Forbidden:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_FORBIDDEN
                    httpStatusCode: 403
                    message: The user has insufficient permissions to complete the request.
                  summary: Forbidden
                  description: The user has insufficient permissions to complete the request.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              examples:
                Not Found:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_NOT_FOUND
                    httpStatusCode: 404
                    message: Resource not found.
                  summary: Not Found
                  description: Resource not found.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              examples:
                Method Not Allowed:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_METHOD_NOT_ALLOWED
                    httpStatusCode: 405
                    message: Method is not allowed.
                  summary: Method Not Allowed
                  description: Method is not allowed.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              examples:
                Unsupported Media Type:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_UNSUPPORTED_MEDIA_TYPE
                    httpStatusCode: 415
                    message: Media type is unsupported.
                  summary: Unsupported Media Type
                  description: Media type is unsupported.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              examples:
                Inherited assignment deletion error:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_NETWORKING_UXI_CANNOT_DELETE_INHERITED_ASSIGNMENT
                    httpStatusCode: 422
                    message: Unable to delete assignment - an inherited assignment cannot be deleted.
                  summary: Inherited assignment deletion error
                  description: Unable to delete assignment - an inherited assignment cannot be deleted.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              examples:
                Too Many Requests:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_TOO_MANY_REQUESTS
                    message: Too many requests.
                    httpStatusCode: 429
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              examples:
                Internal Server Error:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_INTERNAL_SERVER_ERROR
                    httpStatusCode: 500
                    message: The request cannot be processed due to an unknown issue.
                  summary: Internal Server Error
                  description: The request cannot be processed due to an unknown issue.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        5XX:
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - HTTPBearer: []
      tags:
        - api
        - configuration
        - v1alpha1
        - service-test-group-assignments
      x-stability-level: alpha
  /networking-uxi/v1alpha1/service-test-group-assignments:
    post:
      operationId: service_test_group_assignment_post
      summary: Service Test Group Assignment Post
      description: Create a service-test group assignment.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceTestGroupAssignmentPostRequest'
            examples:
              Create a service test group assignment:
                summary: Create a service test group assignment
                description: Create a service test group assignment.
                value:
                  groupId: dsfldjsah389
                  serviceTestId: dcccdabe-434b-40af-aac1-cf4c205dd5cc
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceTestGroupAssignmentPostResponse'
              examples:
                Service test group assignment created:
                  value:
                    id: 90e79136-8c10-4732-9e2a-c928f39c03b8
                    group:
                      id: dsfldjsah389
                    serviceTest:
                      id: dcccdabe-434b-40af-aac1-cf4c205dd5cc
                    type: networking-uxi/service-test-group-assignment
                  summary: Service test group assignment created
                  description: Service test group assignment successfully created.
        '400':
          description: Bad Request
          content:
            application/json:
              examples:
                Bad Request:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_BAD_REQUEST
                    httpStatusCode: 400
                    message: The request could not be processed due to a validation error.
                    errorDetails:
                      - issues:
                          - description: The request could not be processed due to a validation error.
                            subject: header
                            source: x-generic-header
                        type: hpe.greenlake.bad_request
                  summary: Bad Request
                  description: The request could not be processed due to a validation error.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_UNAUTHORIZED
                    message: >-
                      You are not authorized to perform this action - the token is missing, expired,
                      revoked, malformed, or invalid for other reasons
                    httpStatusCode: 401
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              examples:
                Forbidden:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_FORBIDDEN
                    httpStatusCode: 403
                    message: The user has insufficient permissions to complete the request.
                  summary: Forbidden
                  description: The user has insufficient permissions to complete the request.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              examples:
                Method Not Allowed:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_METHOD_NOT_ALLOWED
                    httpStatusCode: 405
                    message: Method is not allowed.
                  summary: Method Not Allowed
                  description: Method is not allowed.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Conflict
          content:
            application/json:
              examples:
                Assignment already exists:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_CONFLICT
                    httpStatusCode: 409
                    message: Resource already exists.
                  summary: Assignment already exists
                  description: Resource already exists.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              examples:
                Unsupported Media Type:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_UNSUPPORTED_MEDIA_TYPE
                    httpStatusCode: 415
                    message: Media type is unsupported.
                  summary: Unsupported Media Type
                  description: Media type is unsupported.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              examples:
                Assignment to root group error:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_NETWORKING_UXI_CANNOT_ASSIGN_SERVICE_TEST_TO_ROOT_GROUP
                    httpStatusCode: 422
                    message: Unable to assign service test to group - the specified group is a root group.
                  summary: Assignment to root group error
                  description: Unable to assign service test to group - the specified group is a root group.
                Group does not exist:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_NETWORKING_UXI_GROUP_DOES_NOT_EXIST
                    httpStatusCode: 422
                    message: Unable to assign service test to group - the specified group does not exist.
                  summary: Group does not exist
                  description: Unable to assign service test to group - the specified group does not exist.
                Service test does not exist:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_NETWORKING_UXI_SERVICE_TEST_DOES_NOT_EXIST
                    httpStatusCode: 422
                    message: >-
                      Unable to assign service test to group - the specified service test does not
                      exist.
                  summary: Service test does not exist
                  description: >-
                    Unable to assign service test to group - the specified service test does not
                    exist.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              examples:
                Too Many Requests:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_TOO_MANY_REQUESTS
                    message: Too many requests.
                    httpStatusCode: 429
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              examples:
                Internal Server Error:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_INTERNAL_SERVER_ERROR
                    httpStatusCode: 500
                    message: The request cannot be processed due to an unknown issue.
                  summary: Internal Server Error
                  description: The request cannot be processed due to an unknown issue.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        5XX:
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - HTTPBearer: []
      tags:
        - api
        - configuration
        - v1alpha1
        - service-test-group-assignments
      x-stability-level: alpha
    get:
      operationId: service_test_group_assignments_get
      summary: Service Test Group Assignments Get
      description: Get a list of service test group assignments.
      parameters:
        - name: id
          in: query
          description: The ID of the resource.
          required: false
          schema:
            description: The ID of the resource.
            anyOf:
              - type: string
              - type: 'null'
            title: ID
        - name: next
          in: query
          description: The next cursor for pagination.
          required: false
          schema:
            description: The next cursor for pagination.
            anyOf:
              - type: string
              - type: 'null'
            title: Next
        - name: limit
          in: query
          description: The maximum number of items returned in the response.
          required: false
          schema:
            description: The maximum number of items returned in the response.
            type: integer
            default: 50
            maximum: 100
            minimum: 0
            title: Limit
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceTestGroupAssignmentsGetResponse'
              examples:
                List of service test group assignments:
                  value:
                    items:
                      - id: 8419059c-1f4d-4cea-adf1-bd09654edba1
                        group:
                          id: 4gergsdgdf4tr
                        serviceTest:
                          id: bff985d7-ef1d-4d49-84d6-5e3ed345dda1
                        type: networking-uxi/service-test-group-assignment
                    count: 1
                    next: aGVsbG8gZnJvbSBhbGlzdGFpcg==
                  summary: List of service test group assignments
                  description: Service test group assignment list retrieval.
        '400':
          description: Bad Request
          content:
            application/json:
              examples:
                Malformed cursor:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_NETWORKING_UXI_MALFORMED_CURSOR
                    httpStatusCode: 400
                    message: The provided cursor could not be decoded.
                  summary: Malformed cursor
                  description: The provided cursor could not be decoded.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_UNAUTHORIZED
                    message: >-
                      You are not authorized to perform this action - the token is missing, expired,
                      revoked, malformed, or invalid for other reasons
                    httpStatusCode: 401
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              examples:
                Forbidden:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_FORBIDDEN
                    httpStatusCode: 403
                    message: The user has insufficient permissions to complete the request.
                  summary: Forbidden
                  description: The user has insufficient permissions to complete the request.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              examples:
                Method Not Allowed:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_METHOD_NOT_ALLOWED
                    httpStatusCode: 405
                    message: Method is not allowed.
                  summary: Method Not Allowed
                  description: Method is not allowed.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              examples:
                Unsupported Media Type:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_UNSUPPORTED_MEDIA_TYPE
                    httpStatusCode: 415
                    message: Media type is unsupported.
                  summary: Unsupported Media Type
                  description: Media type is unsupported.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '429':
          description: Too Many Requests
          content:
            application/json:
              examples:
                Too Many Requests:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_TOO_MANY_REQUESTS
                    message: Too many requests.
                    httpStatusCode: 429
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              examples:
                Internal Server Error:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_INTERNAL_SERVER_ERROR
                    httpStatusCode: 500
                    message: The request cannot be processed due to an unknown issue.
                  summary: Internal Server Error
                  description: The request cannot be processed due to an unknown issue.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        5XX:
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - HTTPBearer: []
      tags:
        - api
        - configuration
        - v1alpha1
        - service-test-group-assignments
      x-stability-level: alpha
  /networking-uxi/v1alpha1/service-tests:
    get:
      operationId: service_tests_get
      summary: Service Tests Get
      description: Lists service-tests matching provided criteria
      parameters:
        - name: id
          in: query
          description: The ID of the resource.
          required: false
          schema:
            description: The ID of the resource.
            anyOf:
              - type: string
              - type: 'null'
            title: ID
        - name: next
          in: query
          description: The next cursor for pagination.
          required: false
          schema:
            description: The next cursor for pagination.
            anyOf:
              - type: string
              - type: 'null'
            title: Next
        - name: limit
          in: query
          description: The maximum number of items returned in the response.
          required: false
          schema:
            description: The maximum number of items returned in the response.
            type: integer
            default: 50
            maximum: 100
            minimum: 0
            title: Limit
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceTestsGetResponse'
              examples:
                List of service tests:
                  value:
                    items:
                      - id: b1b8bd47-951a-42e3-bbec-f68ee5cc94be
                        category: Category
                        name: Service Test Name
                        target: Target
                        template: Template
                        isEnabled: true
                        type: networking-uxi/service-test
                    count: 1
                    next: aGVsbG8gZnJvbSBhbGlzdGFpcg==
                  summary: List of service tests
                  description: List of service tests retrieval.
        '400':
          description: Bad Request
          content:
            application/json:
              examples:
                Malformed cursor:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_NETWORKING_UXI_MALFORMED_CURSOR
                    httpStatusCode: 400
                    message: The provided cursor could not be decoded.
                  summary: Malformed cursor
                  description: The provided cursor could not be decoded.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_UNAUTHORIZED
                    message: >-
                      You are not authorized to perform this action - the token is missing, expired,
                      revoked, malformed, or invalid for other reasons
                    httpStatusCode: 401
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              examples:
                Forbidden:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_FORBIDDEN
                    httpStatusCode: 403
                    message: The user has insufficient permissions to complete the request.
                  summary: Forbidden
                  description: The user has insufficient permissions to complete the request.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              examples:
                Method Not Allowed:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_METHOD_NOT_ALLOWED
                    httpStatusCode: 405
                    message: Method is not allowed.
                  summary: Method Not Allowed
                  description: Method is not allowed.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              examples:
                Unsupported Media Type:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_UNSUPPORTED_MEDIA_TYPE
                    httpStatusCode: 415
                    message: Media type is unsupported.
                  summary: Unsupported Media Type
                  description: Media type is unsupported.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '429':
          description: Too Many Requests
          content:
            application/json:
              examples:
                Too Many Requests:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_TOO_MANY_REQUESTS
                    message: Too many requests.
                    httpStatusCode: 429
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              examples:
                Internal Server Error:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_INTERNAL_SERVER_ERROR
                    httpStatusCode: 500
                    message: The request cannot be processed due to an unknown issue.
                  summary: Internal Server Error
                  description: The request cannot be processed due to an unknown issue.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        5XX:
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - HTTPBearer: []
      tags:
        - api
        - configuration
        - v1alpha1
        - service-tests
      x-stability-level: alpha
  /networking-uxi/v1alpha1/wired-networks:
    get:
      operationId: wired_networks_get
      summary: Wired Networks Get
      description: Get a list of wired networks
      parameters:
        - name: id
          in: query
          description: The ID of the resource.
          required: false
          schema:
            description: The ID of the resource.
            anyOf:
              - type: string
              - type: 'null'
            title: ID
        - name: next
          in: query
          description: The next cursor for pagination.
          required: false
          schema:
            description: The next cursor for pagination.
            anyOf:
              - type: string
              - type: 'null'
            title: Next
        - name: limit
          in: query
          description: The maximum number of items returned in the response.
          required: false
          schema:
            description: The maximum number of items returned in the response.
            type: integer
            default: 50
            maximum: 100
            minimum: 0
            title: Limit
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WiredNetworksGetResponse'
              examples:
                List of wired networks:
                  value:
                    items:
                      - id: b1b8bd47-951a-42e3-bbec-f68ee5cc94be
                        name: Wired Network Name
                        ipVersion: ipv4
                        createdAt: '2023-10-01T12:34:56Z'
                        updatedAt: '2023-10-01T12:34:56Z'
                        security: WPA2
                        dnsLookupDomain: example.com
                        disableEdns: false
                        useDns64: true
                        externalConnectivity: true
                        vLanId: 100
                        type: networking-uxi/wired-network
                    count: 1
                    next: aGVsbG8gZnJvbSBhbGlzdGFpcg==
                  summary: List of wired networks
                  description: List of wired networks retrieval.
        '400':
          description: Bad Request
          content:
            application/json:
              examples:
                Malformed cursor:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_NETWORKING_UXI_MALFORMED_CURSOR
                    httpStatusCode: 400
                    message: The provided cursor could not be decoded.
                  summary: Malformed cursor
                  description: The provided cursor could not be decoded.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_UNAUTHORIZED
                    message: >-
                      You are not authorized to perform this action - the token is missing, expired,
                      revoked, malformed, or invalid for other reasons
                    httpStatusCode: 401
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              examples:
                Forbidden:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_FORBIDDEN
                    httpStatusCode: 403
                    message: The user has insufficient permissions to complete the request.
                  summary: Forbidden
                  description: The user has insufficient permissions to complete the request.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              examples:
                Method Not Allowed:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_METHOD_NOT_ALLOWED
                    httpStatusCode: 405
                    message: Method is not allowed.
                  summary: Method Not Allowed
                  description: Method is not allowed.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              examples:
                Unsupported Media Type:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_UNSUPPORTED_MEDIA_TYPE
                    httpStatusCode: 415
                    message: Media type is unsupported.
                  summary: Unsupported Media Type
                  description: Media type is unsupported.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '429':
          description: Too Many Requests
          content:
            application/json:
              examples:
                Too Many Requests:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_TOO_MANY_REQUESTS
                    message: Too many requests.
                    httpStatusCode: 429
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              examples:
                Internal Server Error:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_INTERNAL_SERVER_ERROR
                    httpStatusCode: 500
                    message: The request cannot be processed due to an unknown issue.
                  summary: Internal Server Error
                  description: The request cannot be processed due to an unknown issue.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        5XX:
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - HTTPBearer: []
      tags:
        - api
        - configuration
        - v1alpha1
        - wired-networks
      x-stability-level: alpha
  /networking-uxi/v1alpha1/wireless-networks:
    get:
      operationId: wireless_networks_get
      summary: Wireless Networks Get
      description: Get a list of wireless networks
      parameters:
        - name: id
          in: query
          description: The ID of the resource.
          required: false
          schema:
            description: The ID of the resource.
            anyOf:
              - type: string
              - type: 'null'
            title: ID
        - name: next
          in: query
          description: The next cursor for pagination.
          required: false
          schema:
            description: The next cursor for pagination.
            anyOf:
              - type: string
              - type: 'null'
            title: Next
        - name: limit
          in: query
          description: The maximum number of items returned in the response.
          required: false
          schema:
            description: The maximum number of items returned in the response.
            type: integer
            default: 50
            maximum: 100
            minimum: 0
            title: Limit
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WirelessNetworksGetResponse'
              examples:
                List of wireless networks:
                  value:
                    items:
                      - id: b1b8bd47-951a-42e3-bbec-f68ee5cc94be
                        name: Wireless Network Name
                        ssid: SSID
                        security: WPA2
                        ipVersion: ipv4
                        createdAt: '2023-01-01T00:00:00Z'
                        updatedAt: '2023-01-02T00:00:00Z'
                        hidden: false
                        bandLocking: 2.4GHz
                        dnsLookupDomain: example.com
                        disableEdns: false
                        useDns64: false
                        externalConnectivity: true
                        type: networking-uxi/wireless-network
                    count: 1
                    next: aGVsbG8gZnJvbSBhbGlzdGFpcg==
                  summary: List of wireless networks
                  description: List of wireless networks retrieval.
        '400':
          description: Bad Request
          content:
            application/json:
              examples:
                Malformed cursor:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_NETWORKING_UXI_MALFORMED_CURSOR
                    httpStatusCode: 400
                    message: The provided cursor could not be decoded.
                  summary: Malformed cursor
                  description: The provided cursor could not be decoded.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_UNAUTHORIZED
                    message: >-
                      You are not authorized to perform this action - the token is missing, expired,
                      revoked, malformed, or invalid for other reasons
                    httpStatusCode: 401
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              examples:
                Forbidden:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_FORBIDDEN
                    httpStatusCode: 403
                    message: The user has insufficient permissions to complete the request.
                  summary: Forbidden
                  description: The user has insufficient permissions to complete the request.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              examples:
                Method Not Allowed:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_METHOD_NOT_ALLOWED
                    httpStatusCode: 405
                    message: Method is not allowed.
                  summary: Method Not Allowed
                  description: Method is not allowed.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              examples:
                Unsupported Media Type:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_UNSUPPORTED_MEDIA_TYPE
                    httpStatusCode: 415
                    message: Media type is unsupported.
                  summary: Unsupported Media Type
                  description: Media type is unsupported.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '429':
          description: Too Many Requests
          content:
            application/json:
              examples:
                Too Many Requests:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_TOO_MANY_REQUESTS
                    message: Too many requests.
                    httpStatusCode: 429
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              examples:
                Internal Server Error:
                  value:
                    debugId: '1234567890'
                    errorCode: HPE_GL_ERROR_INTERNAL_SERVER_ERROR
                    httpStatusCode: 500
                    message: The request cannot be processed due to an unknown issue.
                  summary: Internal Server Error
                  description: The request cannot be processed due to an unknown issue.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        5XX:
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - HTTPBearer: []
      tags:
        - api
        - configuration
        - v1alpha1
        - wireless-networks
      x-stability-level: alpha
components:
  schemas:
    AgentGroupAssignmentPostAgent:
      type: object
      properties:
        id:
          description: The unique identifier of the agent
          type: string
          title: Agent ID
      required:
        - id
      title: AgentGroupAssignmentPostAgent
    AgentGroupAssignmentPostGroup:
      type: object
      properties:
        id:
          description: The unique identifier of the group
          type: string
          title: Group ID
      required:
        - id
      title: AgentGroupAssignmentPostGroup
    AgentGroupAssignmentPostRequest:
      type: object
      properties:
        groupId:
          description: The unique identifier of the group
          type: string
          title: Group ID
        agentId:
          description: The unique identifier of the agent
          type: string
          title: Agent ID
      required:
        - groupId
        - agentId
      title: AgentGroupAssignmentPostRequest
    AgentGroupAssignmentPostResponse:
      type: object
      properties:
        id:
          description: The unique identifier of the agent group assignment
          type: string
          title: ID
        group:
          description: The group component of the agent group assignment
          $ref: '#/components/schemas/AgentGroupAssignmentPostGroup'
          title: Group
        agent:
          description: The agent component of the agent group assignment
          $ref: '#/components/schemas/AgentGroupAssignmentPostAgent'
          title: Agent
        type:
          description: The type of the resource.
          type: string
          enum:
            - networking-uxi/agent-group-assignment
          const: networking-uxi/agent-group-assignment
          title: Type
      required:
        - id
        - group
        - agent
        - type
      title: AgentGroupAssignmentPostResponse
    AgentGroupAssignmentsGetAgent:
      type: object
      properties:
        id:
          description: The unique identifier of the agent
          type: string
          title: Agent ID
      required:
        - id
      title: AgentGroupAssignmentsGetAgent
    AgentGroupAssignmentsGetGroup:
      type: object
      properties:
        id:
          description: The unique identifier of the group
          type: string
          title: Group ID
      required:
        - id
      title: AgentGroupAssignmentsGetGroup
    AgentGroupAssignmentsGetItem:
      type: object
      properties:
        id:
          description: The unique identifier of the agent group assignment
          type: string
          title: ID
        group:
          description: The group component of the agent group assignment
          $ref: '#/components/schemas/AgentGroupAssignmentsGetGroup'
          title: Group
        agent:
          description: The agent component of the agent group assignment
          $ref: '#/components/schemas/AgentGroupAssignmentsGetAgent'
          title: Agent
        type:
          description: The type of the resource.
          type: string
          enum:
            - networking-uxi/agent-group-assignment
          const: networking-uxi/agent-group-assignment
          title: Type
      required:
        - id
        - group
        - agent
        - type
      title: AgentGroupAssignmentsGetItem
    AgentGroupAssignmentsGetResponse:
      type: object
      properties:
        items:
          description: The list of resources.
          type: array
          items:
            $ref: '#/components/schemas/AgentGroupAssignmentsGetItem'
          title: Items
        count:
          description: The number of resources returned in the response.
          type: integer
          title: Count
        next:
          description: The next cursor for pagination.
          anyOf:
            - type: string
            - type: 'null'
          title: Next
      required:
        - items
        - count
        - next
      title: AgentGroupAssignmentsGetResponse
    AgentPatchRequest:
      description: Request body for patching an agent.
      type: object
      properties:
        name:
          description: The name of the agent
          type: string
          maxLength: 100
          minLength: 1
          title: Name
        notes:
          description: The notes of the agent
          type: string
          title: Notes
        pcapMode:
          description: The pcap mode of the agent
          $ref: '#/components/schemas/AgentPcapMode'
          title: PcapMode
      title: AgentPatchRequest
    AgentPatchResponse:
      type: object
      properties:
        id:
          description: The unique identifier of the agent
          type: string
          title: ID
        serial:
          description: The serial number of the agent
          type: string
          title: Serial
        name:
          description: The name of the agent
          type: string
          title: Name
        groupName:
          description: The name of the group that the agent is assigned to
          anyOf:
            - type: string
            - type: 'null'
          title: Group Name
        groupPath:
          description: The path of the group that the agent is assigned to
          anyOf:
            - type: string
            - type: 'null'
          title: Group Path
        modelNumber:
          description: The model number of the agent
          anyOf:
            - type: string
            - type: 'null'
          title: Model Number
        wifiMacAddress:
          description: The WiFi MAC address of the agent
          anyOf:
            - type: string
            - type: 'null'
          title: WiFi MAC Address
        ethernetMacAddress:
          description: The Ethernet MAC address of the agent
          anyOf:
            - type: string
            - type: 'null'
          title: Ethernet MAC Address
        notes:
          description: The notes of the agent
          anyOf:
            - type: string
            - type: 'null'
          title: Notes
        pcapMode:
          description: The pcap mode of the agent
          anyOf:
            - $ref: '#/components/schemas/AgentPcapMode'
            - type: 'null'
          title: PcapMode
        type:
          description: The type of the resource.
          type: string
          enum:
            - networking-uxi/agent
          const: networking-uxi/agent
          title: Type
      required:
        - id
        - serial
        - name
        - groupName
        - groupPath
        - modelNumber
        - wifiMacAddress
        - ethernetMacAddress
        - notes
        - pcapMode
        - type
      title: AgentPatchResponse
    AgentPcapMode:
      type: string
      enum:
        - light
        - full
        - 'off'
      title: AgentPcapMode
    AgentsGetItem:
      type: object
      properties:
        id:
          description: The unique identifier of the agent
          type: string
          title: ID
        serial:
          description: The serial number of the agent
          type: string
          title: Serial
        name:
          description: The name of the agent
          type: string
          title: Name
        groupName:
          description: The name of the group that the agent is assigned to
          anyOf:
            - type: string
            - type: 'null'
          title: Group Name
        groupPath:
          description: The path of the group that the agent is assigned to
          anyOf:
            - type: string
            - type: 'null'
          title: Group Path
        modelNumber:
          description: The model number of the agent
          anyOf:
            - type: string
            - type: 'null'
          title: Model Number
        wifiMacAddress:
          description: The WiFi MAC address of the agent
          anyOf:
            - type: string
            - type: 'null'
          title: WiFi MAC Address
        ethernetMacAddress:
          description: The Ethernet MAC address of the agent
          anyOf:
            - type: string
            - type: 'null'
          title: Ethernet MAC Address
        notes:
          description: The notes of the agent
          anyOf:
            - type: string
            - type: 'null'
          title: Notes
        pcapMode:
          description: The pcap mode of the agent
          anyOf:
            - $ref: '#/components/schemas/AgentPcapMode'
            - type: 'null'
          title: PcapMode
        type:
          description: The type of the resource.
          type: string
          enum:
            - networking-uxi/agent
          const: networking-uxi/agent
          title: Type
      required:
        - id
        - serial
        - name
        - groupName
        - groupPath
        - modelNumber
        - wifiMacAddress
        - ethernetMacAddress
        - notes
        - pcapMode
        - type
      title: AgentsGetItem
    AgentsGetResponse:
      type: object
      properties:
        items:
          description: The list of resources.
          type: array
          items:
            $ref: '#/components/schemas/AgentsGetItem'
          title: Items
        count:
          description: The number of resources returned in the response.
          type: integer
          title: Count
        next:
          description: The next cursor for pagination.
          anyOf:
            - type: string
            - type: 'null'
          title: Next
      required:
        - items
        - count
        - next
      title: AgentsGetResponse
    ErrorDetail:
      type: object
      properties:
        issues:
          type: array
          items:
            $ref: '#/components/schemas/Issue'
          title: Issues
        type:
          type: string
          title: Type
      required:
        - issues
        - type
      title: ErrorDetail
    ErrorResponse:
      type: object
      properties:
        debugId:
          type: string
          title: DebugID
        errorCode:
          type: string
          title: ErrorCode
        httpStatusCode:
          type: integer
          title: HttpStatusCode
        message:
          type: string
          title: Message
        errorDetails:
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          title: ErrorDetails
      required:
        - debugId
        - errorCode
        - httpStatusCode
        - message
      title: ErrorResponse
    GroupPatchParent:
      type: object
      properties:
        id:
          description: The unique identifier of the parent group
          type: string
          title: ID
      required:
        - id
      title: GroupPatchParent
    GroupPatchRequest:
      type: object
      properties:
        name:
          description: The updated group name
          type: string
          maxLength: 250
          minLength: 1
          title: Name
      title: GroupPatchRequest
    GroupPatchResponse:
      type: object
      properties:
        id:
          description: The unique identifier of the group
          type: string
          title: ID
        name:
          description: The name of the group
          type: string
          title: Name
        path:
          description: The path of the group
          type: string
          title: Path
        parent:
          description: The parent group
          $ref: '#/components/schemas/GroupPatchParent'
          title: Parent
        type:
          description: The type of the resource.
          type: string
          enum:
            - networking-uxi/group
          const: networking-uxi/group
          title: Type
      required:
        - id
        - name
        - path
        - parent
        - type
      title: GroupPatchResponse
    GroupPostParent:
      type: object
      properties:
        id:
          description: The unique identifier of the parent group
          type: string
          title: ID
      required:
        - id
      title: GroupPostParent
    GroupPostRequest:
      type: object
      properties:
        parentId:
          description: The unique identifier of the parent group
          anyOf:
            - type: string
            - type: 'null'
          title: Parent Group ID
        name:
          description: The name of the group
          type: string
          maxLength: 250
          minLength: 1
          title: Name
      required:
        - name
      title: GroupPostRequest
    GroupPostResponse:
      type: object
      properties:
        id:
          description: The unique identifier of the group
          type: string
          title: ID
        name:
          description: The name of the group
          type: string
          title: Name
        path:
          description: The path of the group
          type: string
          title: Path
        parent:
          description: The parent group
          $ref: '#/components/schemas/GroupPostParent'
          title: Parent
        type:
          description: The type of the resource.
          type: string
          enum:
            - networking-uxi/group
          const: networking-uxi/group
          title: Type
      required:
        - id
        - name
        - path
        - parent
        - type
      title: GroupPostResponse
    GroupsGetItem:
      type: object
      properties:
        id:
          description: The unique identifier of the group
          type: string
          title: ID
        name:
          description: The name of the group
          type: string
          title: Name
        parent:
          description: The parent group
          anyOf:
            - $ref: '#/components/schemas/GroupsGetParent'
            - type: 'null'
          title: Parent
        path:
          description: The path of the group
          type: string
          title: Path
        type:
          description: The type of the resource.
          type: string
          enum:
            - networking-uxi/group
          const: networking-uxi/group
          title: Type
      required:
        - id
        - name
        - parent
        - path
        - type
      title: GroupsGetItem
    GroupsGetParent:
      type: object
      properties:
        id:
          description: The unique identifier of the parent group
          type: string
          title: Parent ID
      required:
        - id
      title: GroupsGetParent
    GroupsGetResponse:
      type: object
      properties:
        items:
          description: The list of resources.
          type: array
          items:
            $ref: '#/components/schemas/GroupsGetItem'
          title: Items
        count:
          description: The number of resources returned in the response.
          type: integer
          title: Count
        next:
          description: The next cursor for pagination.
          anyOf:
            - type: string
            - type: 'null'
          title: Next
      required:
        - items
        - count
        - next
      title: GroupsGetResponse
    HTTPValidationError:
      type: object
      properties:
        detail:
          type: array
          items:
            $ref: '#/components/schemas/ValidationError'
          title: Detail
      title: HTTPValidationError
    IpVersion:
      type: string
      enum:
        - ipv4
        - ipv6
      title: IpVersion
    Issue:
      type: object
      properties:
        description:
          type: string
          title: Description
        subject:
          $ref: '#/components/schemas/IssueSubject'
        source:
          type: string
          title: Source
      required:
        - description
        - subject
        - source
      title: Issue
    IssueSubject:
      type: string
      enum:
        - field
        - header
        - query.parameter
      title: IssueSubject
    NetworkGroupAssignmentPostGroup:
      type: object
      properties:
        id:
          description: The unique identifier of the group
          type: string
          title: Group ID
      required:
        - id
      title: NetworkGroupAssignmentPostGroup
    NetworkGroupAssignmentPostNetwork:
      type: object
      properties:
        id:
          description: The unique identifier of the network
          type: string
          title: Network ID
      required:
        - id
      title: NetworkGroupAssignmentPostNetwork
    NetworkGroupAssignmentPostRequest:
      type: object
      properties:
        groupId:
          description: The unique identifier of the group
          type: string
          title: Group ID
        networkId:
          description: The unique identifier of the network
          type: string
          title: Network ID
      required:
        - groupId
        - networkId
      title: NetworkGroupAssignmentPostRequest
    NetworkGroupAssignmentPostResponse:
      type: object
      properties:
        id:
          description: The unique identifier of the network group assignment
          type: string
          title: ID
        group:
          description: The group component of the network group assignment
          $ref: '#/components/schemas/NetworkGroupAssignmentPostGroup'
          title: Group
        network:
          description: The network component of the network group assignment
          $ref: '#/components/schemas/NetworkGroupAssignmentPostNetwork'
          title: Network
        type:
          description: The type of the resource.
          type: string
          enum:
            - networking-uxi/network-group-assignment
          const: networking-uxi/network-group-assignment
          title: Type
      required:
        - id
        - group
        - network
        - type
      title: NetworkGroupAssignmentPostResponse
    NetworkGroupAssignmentsGetGroup:
      type: object
      properties:
        id:
          description: The unique identifier of the group
          type: string
          title: Group ID
      required:
        - id
      title: NetworkGroupAssignmentsGetGroup
    NetworkGroupAssignmentsGetItem:
      type: object
      properties:
        id:
          description: The unique identifier of the network group assignment
          type: string
          title: ID
        group:
          description: The group component of the network group assignment
          $ref: '#/components/schemas/NetworkGroupAssignmentsGetGroup'
          title: Group
        network:
          description: The network component of the network group assignment
          $ref: '#/components/schemas/NetworkGroupAssignmentsGetNetwork'
          title: Network
        type:
          description: The type of the resource.
          type: string
          enum:
            - networking-uxi/network-group-assignment
          const: networking-uxi/network-group-assignment
          title: Type
      required:
        - id
        - group
        - network
        - type
      title: NetworkGroupAssignmentsGetItem
    NetworkGroupAssignmentsGetNetwork:
      type: object
      properties:
        id:
          description: The unique identifier of the network
          type: string
          title: Network ID
      required:
        - id
      title: NetworkGroupAssignmentsGetNetwork
    NetworkGroupAssignmentsGetResponse:
      type: object
      properties:
        items:
          description: The list of resources.
          type: array
          items:
            $ref: '#/components/schemas/NetworkGroupAssignmentsGetItem'
          title: Items
        count:
          description: The number of resources returned in the response.
          type: integer
          title: Count
        next:
          description: The next cursor for pagination.
          anyOf:
            - type: string
            - type: 'null'
          title: Next
      required:
        - items
        - count
        - next
      title: NetworkGroupAssignmentsGetResponse
    SensorGroupAssignmentPostGroup:
      type: object
      properties:
        id:
          description: The unique identifier of the group
          type: string
          title: Group ID
      required:
        - id
      title: SensorGroupAssignmentPostGroup
    SensorGroupAssignmentPostRequest:
      type: object
      properties:
        groupId:
          description: The unique identifier of the group
          type: string
          title: Group ID
        sensorId:
          description: The unique identifier of the sensor
          type: string
          title: Sensor ID
      required:
        - groupId
        - sensorId
      title: SensorGroupAssignmentPostRequest
    SensorGroupAssignmentPostResponse:
      type: object
      properties:
        id:
          description: The unique identifier of the sensor group assignment
          type: string
          title: ID
        group:
          description: The group component of the sensor group assignment
          $ref: '#/components/schemas/SensorGroupAssignmentPostGroup'
          title: Group
        sensor:
          description: The sensor component of the sensor group assignment
          $ref: '#/components/schemas/SensorGroupAssignmentPostSensor'
          title: Sensor
        type:
          description: The type of the resource.
          type: string
          enum:
            - networking-uxi/sensor-group-assignment
          const: networking-uxi/sensor-group-assignment
          title: Type
      required:
        - id
        - group
        - sensor
        - type
      title: SensorGroupAssignmentPostResponse
    SensorGroupAssignmentPostSensor:
      type: object
      properties:
        id:
          description: The unique identifier of the sensor
          type: string
          title: Sensor ID
      required:
        - id
      title: SensorGroupAssignmentPostSensor
    SensorGroupAssignmentsGetGroup:
      type: object
      properties:
        id:
          description: The unique identifier of the group
          type: string
          title: Group ID
      required:
        - id
      title: SensorGroupAssignmentsGetGroup
    SensorGroupAssignmentsGetItem:
      type: object
      properties:
        id:
          description: The unique identifier of the sensor group assignment
          type: string
          title: ID
        group:
          description: The group component of the sensor group assignment
          $ref: '#/components/schemas/SensorGroupAssignmentsGetGroup'
          title: Group
        sensor:
          description: The sensor component of the sensor group assignment
          $ref: '#/components/schemas/SensorGroupAssignmentsGetSensor'
          title: Sensor
        type:
          description: The type of the resource.
          type: string
          enum:
            - networking-uxi/sensor-group-assignment
          const: networking-uxi/sensor-group-assignment
          title: Type
      required:
        - id
        - group
        - sensor
        - type
      title: SensorGroupAssignmentsGetItem
    SensorGroupAssignmentsGetResponse:
      type: object
      properties:
        items:
          description: The list of resources.
          type: array
          items:
            $ref: '#/components/schemas/SensorGroupAssignmentsGetItem'
          title: Items
        count:
          description: The number of resources returned in the response.
          type: integer
          title: Count
        next:
          description: The next cursor for pagination.
          anyOf:
            - type: string
            - type: 'null'
          title: Next
      required:
        - items
        - count
        - next
      title: SensorGroupAssignmentsGetResponse
    SensorGroupAssignmentsGetSensor:
      type: object
      properties:
        id:
          description: The unique identifier of the sensor
          type: string
          title: Sensor ID
      required:
        - id
      title: SensorGroupAssignmentsGetSensor
    SensorPatchRequest:
      description: Request body for patching a sensor.
      type: object
      properties:
        name:
          description: The updated sensor name
          type: string
          maxLength: 100
          minLength: 1
          title: Name
        addressNote:
          description: The updated address note for the sensor
          type: string
          title: Address Note
        notes:
          description: Additional notes for the sensor
          type: string
          title: Notes
        pcapMode:
          description: The updated pcap mode for the sensor
          $ref: '#/components/schemas/SensorPcapMode'
          title: PcapMode
      title: SensorPatchRequest
    SensorPatchResponse:
      type: object
      properties:
        id:
          description: The unique identifier of the sensor
          type: string
          title: ID
        serial:
          description: The serial number of the sensor
          type: string
          title: Serial
        name:
          description: The name of the sensor
          type: string
          title: Name
        groupName:
          description: The name of the group that the agent is assigned to
          anyOf:
            - type: string
            - type: 'null'
          title: Group Name
        groupPath:
          description: The path of the group that the agent is assigned to
          anyOf:
            - type: string
            - type: 'null'
          title: Group Path
        modelNumber:
          description: The model number of the sensor
          type: string
          title: Model Number
        wifiMacAddress:
          description: The WiFi MAC address of the sensor
          anyOf:
            - type: string
            - type: 'null'
          title: WiFi MAC Address
        ethernetMacAddress:
          description: The Ethernet MAC address of the sensor
          anyOf:
            - type: string
            - type: 'null'
          title: Ethernet MAC Address
        addressNote:
          description: The address note of the sensor
          anyOf:
            - type: string
            - type: 'null'
          title: Address Note
        longitude:
          description: The longitude of the sensor
          anyOf:
            - type: number
            - type: 'null'
          title: Longitude
        latitude:
          description: The latitude of the sensor
          anyOf:
            - type: number
            - type: 'null'
          title: Latitude
        notes:
          description: Additional notes for the sensor
          anyOf:
            - type: string
            - type: 'null'
          title: Notes
        pcapMode:
          description: The pcap mode of the sensor
          anyOf:
            - $ref: '#/components/schemas/SensorPcapMode'
            - type: 'null'
          title: PcapMode
        type:
          description: The type of the resource.
          type: string
          enum:
            - networking-uxi/sensor
          const: networking-uxi/sensor
          title: Type
      required:
        - id
        - serial
        - name
        - groupName
        - groupPath
        - modelNumber
        - wifiMacAddress
        - ethernetMacAddress
        - addressNote
        - longitude
        - latitude
        - notes
        - pcapMode
        - type
      title: SensorPatchResponse
    SensorPcapMode:
      type: string
      enum:
        - light
        - full
        - 'off'
      title: SensorPcapMode
    SensorsGetItem:
      type: object
      properties:
        id:
          description: The unique identifier of the sensor
          type: string
          title: ID
        serial:
          description: The serial number of the sensor
          type: string
          title: Serial
        name:
          description: The name of the sensor
          type: string
          title: Name
        groupName:
          description: The name of the group that the agent is assigned to
          anyOf:
            - type: string
            - type: 'null'
          title: Group Name
        groupPath:
          description: The path of the group that the agent is assigned to
          anyOf:
            - type: string
            - type: 'null'
          title: Group Path
        modelNumber:
          description: The model number of the sensor
          type: string
          title: Model Number
        wifiMacAddress:
          description: The WiFi MAC address of the sensor
          anyOf:
            - type: string
            - type: 'null'
          title: WiFi MAC Address
        ethernetMacAddress:
          description: The Ethernet MAC address of the sensor
          anyOf:
            - type: string
            - type: 'null'
          title: Ethernet MAC Address
        addressNote:
          description: The address note of the sensor
          anyOf:
            - type: string
            - type: 'null'
          title: Address Note
        longitude:
          description: The longitude of the sensor
          anyOf:
            - type: number
            - type: 'null'
          title: Longitude
        latitude:
          description: The latitude of the sensor
          anyOf:
            - type: number
            - type: 'null'
          title: Latitude
        notes:
          description: The notes of the sensor
          anyOf:
            - type: string
            - type: 'null'
          title: Notes
        pcapMode:
          description: The pcap mode of the sensor
          anyOf:
            - $ref: '#/components/schemas/SensorPcapMode'
            - type: 'null'
          title: PcapMode
        type:
          description: The type of the resource.
          type: string
          enum:
            - networking-uxi/sensor
          const: networking-uxi/sensor
          title: Type
      required:
        - id
        - serial
        - name
        - groupName
        - groupPath
        - modelNumber
        - wifiMacAddress
        - ethernetMacAddress
        - addressNote
        - longitude
        - latitude
        - notes
        - pcapMode
        - type
      title: SensorsGetItem
    SensorsGetResponse:
      type: object
      properties:
        items:
          description: The list of resources.
          type: array
          items:
            $ref: '#/components/schemas/SensorsGetItem'
          title: Items
        count:
          description: The number of resources returned in the response.
          type: integer
          title: Count
        next:
          description: The next cursor for pagination.
          anyOf:
            - type: string
            - type: 'null'
          title: Next
      required:
        - items
        - count
        - next
      title: SensorsGetResponse
    ServiceTestGroupAssignmentPostGroup:
      type: object
      properties:
        id:
          description: The unique identifier of the group
          type: string
          title: Group ID
      required:
        - id
      title: ServiceTestGroupAssignmentPostGroup
    ServiceTestGroupAssignmentPostRequest:
      type: object
      properties:
        groupId:
          description: The unique identifier of the group
          type: string
          title: Group ID
        serviceTestId:
          description: The unique identifier of the service test
          type: string
          title: Service Test ID
      required:
        - groupId
        - serviceTestId
      title: ServiceTestGroupAssignmentPostRequest
    ServiceTestGroupAssignmentPostResponse:
      type: object
      properties:
        id:
          description: The unique identifier of the service test group assignment
          type: string
          format: uuid
          title: ID
        group:
          description: The group component of the service test group assignment
          $ref: '#/components/schemas/ServiceTestGroupAssignmentPostGroup'
          title: Group
        serviceTest:
          description: The service test component of the service test group assignment
          $ref: '#/components/schemas/ServiceTestGroupAssignmentPostServiceTest'
          title: Service Test
        type:
          description: The type of the resource.
          type: string
          enum:
            - networking-uxi/service-test-group-assignment
          const: networking-uxi/service-test-group-assignment
          title: Type
      required:
        - id
        - group
        - serviceTest
        - type
      title: ServiceTestGroupAssignmentPostResponse
    ServiceTestGroupAssignmentPostServiceTest:
      type: object
      properties:
        id:
          description: The unique identifier of the service test
          type: string
          title: Service Test ID
      required:
        - id
      title: ServiceTestGroupAssignmentPostServiceTest
    ServiceTestGroupAssignmentsGetGroup:
      type: object
      properties:
        id:
          description: The unique identifier of the group
          type: string
          title: Group ID
      required:
        - id
      title: ServiceTestGroupAssignmentsGetGroup
    ServiceTestGroupAssignmentsGetItem:
      type: object
      properties:
        id:
          description: The unique identifier of the service test group assignment
          type: string
          title: ID
        group:
          description: The group component of the service test group assignment
          $ref: '#/components/schemas/ServiceTestGroupAssignmentsGetGroup'
          title: Group
        serviceTest:
          description: The service test component of the service test group assignment
          $ref: '#/components/schemas/ServiceTestGroupAssignmentsGetServiceTest'
          title: Service Test
        type:
          description: The type of the resource.
          type: string
          enum:
            - networking-uxi/service-test-group-assignment
          const: networking-uxi/service-test-group-assignment
          title: Type
      required:
        - id
        - group
        - serviceTest
        - type
      title: ServiceTestGroupAssignmentsGetItem
    ServiceTestGroupAssignmentsGetResponse:
      type: object
      properties:
        items:
          description: The list of resources.
          type: array
          items:
            $ref: '#/components/schemas/ServiceTestGroupAssignmentsGetItem'
          title: Items
        count:
          description: The number of resources returned in the response.
          type: integer
          title: Count
        next:
          description: The next cursor for pagination.
          anyOf:
            - type: string
            - type: 'null'
          title: Next
      required:
        - items
        - count
        - next
      title: ServiceTestGroupAssignmentsGetResponse
    ServiceTestGroupAssignmentsGetServiceTest:
      type: object
      properties:
        id:
          description: The unique identifier of the service test
          type: string
          title: Service Test ID
      required:
        - id
      title: ServiceTestGroupAssignmentsGetServiceTest
    ServiceTestsGetItem:
      type: object
      properties:
        id:
          description: The unique identifier of the service test
          type: string
          title: ID
        category:
          description: The category of the service test
          type: string
          title: Category
        name:
          description: The name of the service test
          type: string
          title: Name
        target:
          description: The target of the service test
          anyOf:
            - type: string
            - type: 'null'
          title: Target
        template:
          description: The template of the service test
          type: string
          title: Template
        isEnabled:
          description: Indicates if the service test is enabled
          type: boolean
          title: Is Enabled
        type:
          description: The type of the resource.
          type: string
          enum:
            - networking-uxi/service-test
          const: networking-uxi/service-test
          title: Type
      required:
        - id
        - category
        - name
        - target
        - template
        - isEnabled
        - type
      title: ServiceTestsGetItem
    ServiceTestsGetResponse:
      type: object
      properties:
        items:
          description: The list of resources.
          type: array
          items:
            $ref: '#/components/schemas/ServiceTestsGetItem'
          title: Items
        count:
          description: The number of resources returned in the response.
          type: integer
          title: Count
        next:
          description: The next cursor for pagination.
          anyOf:
            - type: string
            - type: 'null'
          title: Next
      required:
        - items
        - count
        - next
      title: ServiceTestsGetResponse
    ValidationError:
      type: object
      properties:
        loc:
          type: array
          items:
            anyOf:
              - type: string
              - type: integer
          title: Location
        msg:
          type: string
          title: Message
        type:
          type: string
          title: Error Type
      required:
        - loc
        - msg
        - type
      title: ValidationError
    WiredNetworksGetItem:
      type: object
      properties:
        id:
          description: The unique identifier of the wired network
          type: string
          title: ID
        name:
          description: The name of the wired network
          type: string
          title: Name
        ipVersion:
          description: The IP version of the wired network
          $ref: '#/components/schemas/IpVersion'
          title: IP Version
        createdAt:
          description: The creation timestamp of the wired network
          type: string
          format: date-time
          title: Created At
        updatedAt:
          description: The last update timestamp of the wired network
          type: string
          format: date-time
          title: Updated At
        security:
          description: The security settings of the wired network
          anyOf:
            - type: string
            - type: 'null'
          title: Security
        dnsLookupDomain:
          description: The DNS lookup domain of the wired network
          anyOf:
            - type: string
            - type: 'null'
          title: DNS Lookup Domain
        disableEdns:
          description: Whether EDNS is disabled for the wired network
          type: boolean
          title: Disable EDNS
        useDns64:
          description: Whether DNS64 is used for the wired network
          type: boolean
          title: Use DNS64
        externalConnectivity:
          description: Whether the wired network has external connectivity
          type: boolean
          title: External Connectivity
        vLanId:
          description: The VLAN ID of the wired network
          anyOf:
            - type: integer
            - type: 'null'
          title: VLAN ID
        type:
          description: The type of the resource.
          type: string
          enum:
            - networking-uxi/wired-network
          const: networking-uxi/wired-network
          title: Type
      required:
        - id
        - name
        - ipVersion
        - createdAt
        - updatedAt
        - security
        - dnsLookupDomain
        - disableEdns
        - useDns64
        - externalConnectivity
        - vLanId
        - type
      title: WiredNetworksGetItem
    WiredNetworksGetResponse:
      type: object
      properties:
        items:
          description: The list of resources.
          type: array
          items:
            $ref: '#/components/schemas/WiredNetworksGetItem'
          title: Items
        count:
          description: The number of resources returned in the response.
          type: integer
          title: Count
        next:
          description: The next cursor for pagination.
          anyOf:
            - type: string
            - type: 'null'
          title: Next
      required:
        - items
        - count
        - next
      title: WiredNetworksGetResponse
    WirelessNetworksGetItem:
      type: object
      properties:
        id:
          description: The unique identifier of the wireless network
          type: string
          title: ID
        name:
          description: The name of the wireless network
          type: string
          title: Name
        ssid:
          description: The SSID of the wireless network
          type: string
          title: SSID
        security:
          description: The security type of the wireless network
          anyOf:
            - type: string
            - type: 'null'
          title: Security
        ipVersion:
          description: The IP version of the wireless network
          $ref: '#/components/schemas/IpVersion'
          title: IP Version
        createdAt:
          description: The creation timestamp of the wireless network
          type: string
          format: date-time
          title: Created At
        updatedAt:
          description: The last update timestamp of the wireless network
          type: string
          format: date-time
          title: Updated At
        hidden:
          description: Whether the wireless network is hidden
          type: boolean
          title: Hidden
        bandLocking:
          description: The band locking setting of the wireless network
          type: string
          title: Band Locking
        dnsLookupDomain:
          description: The DNS lookup domain of the wireless network
          anyOf:
            - type: string
            - type: 'null'
          title: DNS Lookup Domain
        disableEdns:
          description: Whether EDNS is disabled for the wireless network
          type: boolean
          title: Disable EDNS
        useDns64:
          description: Whether DNS64 is used for the wireless network
          type: boolean
          title: Use DNS64
        externalConnectivity:
          description: Whether the wireless network has external connectivity
          type: boolean
          title: External Connectivity
        type:
          description: The type of the resource.
          type: string
          enum:
            - networking-uxi/wireless-network
          const: networking-uxi/wireless-network
          title: Type
      required:
        - id
        - name
        - ssid
        - security
        - ipVersion
        - createdAt
        - updatedAt
        - hidden
        - bandLocking
        - dnsLookupDomain
        - disableEdns
        - useDns64
        - externalConnectivity
        - type
      title: WirelessNetworksGetItem
    WirelessNetworksGetResponse:
      type: object
      properties:
        items:
          description: The list of resources.
          type: array
          items:
            $ref: '#/components/schemas/WirelessNetworksGetItem'
          title: Items
        count:
          description: The number of resources returned in the response.
          type: integer
          title: Count
        next:
          description: The next cursor for pagination.
          anyOf:
            - type: string
            - type: 'null'
          title: Next
      required:
        - items
        - count
        - next
      title: WirelessNetworksGetResponse
  securitySchemes:
    HTTPBearer:
      type: http
      scheme: bearer
tags:
  - name: api
  - name: v1
  - name: v1alpha1
  - name: configuration
  - name: agents
  - name: agent-group-assignments
  - name: groups
  - name: network-group-assignments
  - name: sensors
  - name: sensor-group-assignments
  - name: service-tests
  - name: service-test-group-assignments
  - name: wired-networks
  - name: wireless-networks
