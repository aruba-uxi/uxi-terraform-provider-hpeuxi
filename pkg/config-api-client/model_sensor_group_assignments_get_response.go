/*
Copyright 2025 Hewlett Packard Enterprise Development LP.
*/

/*
HPE Aruba Networking UXI Configuration

This document outlines the API contracts for HPE Aruba Networking UXI.

API version: 6.7.0
Contact: support@capenetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package config_api_client

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the SensorGroupAssignmentsGetResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SensorGroupAssignmentsGetResponse{}

// SensorGroupAssignmentsGetResponse struct for SensorGroupAssignmentsGetResponse
type SensorGroupAssignmentsGetResponse struct {
	// The list of resources.
	Items []SensorGroupAssignmentsGetItem `json:"items"`
	// The number of resources returned in the response.
	Count int32          `json:"count"`
	Next  NullableString `json:"next"`
}

type _SensorGroupAssignmentsGetResponse SensorGroupAssignmentsGetResponse

// NewSensorGroupAssignmentsGetResponse instantiates a new SensorGroupAssignmentsGetResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSensorGroupAssignmentsGetResponse(
	items []SensorGroupAssignmentsGetItem,
	count int32,
	next NullableString,
) *SensorGroupAssignmentsGetResponse {
	this := SensorGroupAssignmentsGetResponse{}
	this.Items = items
	this.Count = count
	this.Next = next
	return &this
}

// NewSensorGroupAssignmentsGetResponseWithDefaults instantiates a new SensorGroupAssignmentsGetResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSensorGroupAssignmentsGetResponseWithDefaults() *SensorGroupAssignmentsGetResponse {
	this := SensorGroupAssignmentsGetResponse{}
	return &this
}

// GetItems returns the Items field value
func (o *SensorGroupAssignmentsGetResponse) GetItems() []SensorGroupAssignmentsGetItem {
	if o == nil {
		var ret []SensorGroupAssignmentsGetItem
		return ret
	}

	return o.Items
}

// GetItemsOk returns a tuple with the Items field value
// and a boolean to check if the value has been set.
func (o *SensorGroupAssignmentsGetResponse) GetItemsOk() ([]SensorGroupAssignmentsGetItem, bool) {
	if o == nil {
		return nil, false
	}
	return o.Items, true
}

// SetItems sets field value
func (o *SensorGroupAssignmentsGetResponse) SetItems(v []SensorGroupAssignmentsGetItem) {
	o.Items = v
}

// GetCount returns the Count field value
func (o *SensorGroupAssignmentsGetResponse) GetCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Count
}

// GetCountOk returns a tuple with the Count field value
// and a boolean to check if the value has been set.
func (o *SensorGroupAssignmentsGetResponse) GetCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Count, true
}

// SetCount sets field value
func (o *SensorGroupAssignmentsGetResponse) SetCount(v int32) {
	o.Count = v
}

// GetNext returns the Next field value
// If the value is explicit nil, the zero value for string will be returned
func (o *SensorGroupAssignmentsGetResponse) GetNext() string {
	if o == nil || o.Next.Get() == nil {
		var ret string
		return ret
	}

	return *o.Next.Get()
}

// GetNextOk returns a tuple with the Next field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SensorGroupAssignmentsGetResponse) GetNextOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Next.Get(), o.Next.IsSet()
}

// SetNext sets field value
func (o *SensorGroupAssignmentsGetResponse) SetNext(v string) {
	o.Next.Set(&v)
}

func (o SensorGroupAssignmentsGetResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SensorGroupAssignmentsGetResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["items"] = o.Items
	toSerialize["count"] = o.Count
	toSerialize["next"] = o.Next.Get()
	return toSerialize, nil
}

func (o *SensorGroupAssignmentsGetResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"items",
		"count",
		"next",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSensorGroupAssignmentsGetResponse := _SensorGroupAssignmentsGetResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSensorGroupAssignmentsGetResponse)

	if err != nil {
		return err
	}

	*o = SensorGroupAssignmentsGetResponse(varSensorGroupAssignmentsGetResponse)

	return err
}

type NullableSensorGroupAssignmentsGetResponse struct {
	value *SensorGroupAssignmentsGetResponse
	isSet bool
}

func (v NullableSensorGroupAssignmentsGetResponse) Get() *SensorGroupAssignmentsGetResponse {
	return v.value
}

func (v *NullableSensorGroupAssignmentsGetResponse) Set(val *SensorGroupAssignmentsGetResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSensorGroupAssignmentsGetResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSensorGroupAssignmentsGetResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSensorGroupAssignmentsGetResponse(
	val *SensorGroupAssignmentsGetResponse,
) *NullableSensorGroupAssignmentsGetResponse {
	return &NullableSensorGroupAssignmentsGetResponse{value: val, isSet: true}
}

func (v NullableSensorGroupAssignmentsGetResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSensorGroupAssignmentsGetResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
