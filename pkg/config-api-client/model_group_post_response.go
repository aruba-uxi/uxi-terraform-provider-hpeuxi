/*
Copyright 2025 Hewlett Packard Enterprise Development LP.
*/

/*
HPE Aruba Networking UXI Configuration

This document outlines the API contracts for HPE Aruba Networking UXI.

API version: 6.7.0
Contact: support@capenetworks.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package config_api_client

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the GroupPostResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GroupPostResponse{}

// GroupPostResponse struct for GroupPostResponse
type GroupPostResponse struct {
	// The unique identifier of the group
	Id string `json:"id"`
	// The name of the group
	Name string `json:"name"`
	// The path of the group
	Path string `json:"path"`
	// The parent group
	Parent GroupPostParent `json:"parent"`
	// The type of the resource.
	Type string `json:"type"`
}

type _GroupPostResponse GroupPostResponse

// NewGroupPostResponse instantiates a new GroupPostResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGroupPostResponse(
	id string,
	name string,
	path string,
	parent GroupPostParent,
	type_ string,
) *GroupPostResponse {
	this := GroupPostResponse{}
	this.Id = id
	this.Name = name
	this.Path = path
	this.Parent = parent
	this.Type = type_
	return &this
}

// NewGroupPostResponseWithDefaults instantiates a new GroupPostResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGroupPostResponseWithDefaults() *GroupPostResponse {
	this := GroupPostResponse{}
	return &this
}

// GetId returns the Id field value
func (o *GroupPostResponse) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *GroupPostResponse) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *GroupPostResponse) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *GroupPostResponse) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *GroupPostResponse) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *GroupPostResponse) SetName(v string) {
	o.Name = v
}

// GetPath returns the Path field value
func (o *GroupPostResponse) GetPath() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Path
}

// GetPathOk returns a tuple with the Path field value
// and a boolean to check if the value has been set.
func (o *GroupPostResponse) GetPathOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Path, true
}

// SetPath sets field value
func (o *GroupPostResponse) SetPath(v string) {
	o.Path = v
}

// GetParent returns the Parent field value
func (o *GroupPostResponse) GetParent() GroupPostParent {
	if o == nil {
		var ret GroupPostParent
		return ret
	}

	return o.Parent
}

// GetParentOk returns a tuple with the Parent field value
// and a boolean to check if the value has been set.
func (o *GroupPostResponse) GetParentOk() (*GroupPostParent, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Parent, true
}

// SetParent sets field value
func (o *GroupPostResponse) SetParent(v GroupPostParent) {
	o.Parent = v
}

// GetType returns the Type field value
func (o *GroupPostResponse) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *GroupPostResponse) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *GroupPostResponse) SetType(v string) {
	o.Type = v
}

func (o GroupPostResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GroupPostResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name
	toSerialize["path"] = o.Path
	toSerialize["parent"] = o.Parent
	toSerialize["type"] = o.Type
	return toSerialize, nil
}

func (o *GroupPostResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"name",
		"path",
		"parent",
		"type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGroupPostResponse := _GroupPostResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGroupPostResponse)

	if err != nil {
		return err
	}

	*o = GroupPostResponse(varGroupPostResponse)

	return err
}

type NullableGroupPostResponse struct {
	value *GroupPostResponse
	isSet bool
}

func (v NullableGroupPostResponse) Get() *GroupPostResponse {
	return v.value
}

func (v *NullableGroupPostResponse) Set(val *GroupPostResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGroupPostResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGroupPostResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGroupPostResponse(val *GroupPostResponse) *NullableGroupPostResponse {
	return &NullableGroupPostResponse{value: val, isSet: true}
}

func (v NullableGroupPostResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGroupPostResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
